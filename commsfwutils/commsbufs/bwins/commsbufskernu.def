EXPORTS
	?CreateLogicalDevice@@YAPAVDLogicalDevice@@XZ @ 1 NONAME ; class DLogicalDevice * CreateLogicalDevice(void)
	?New@DCommsPond@@SAPAV1@XZ @ 2 NONAME ; class DCommsPond * DCommsPond::New(void)
	?Fault@KernCommsBuf@@SAXH@Z @ 3 NONAME ; void KernCommsBuf::Fault(int)
	?Free@DCommsPond@@QAEXAAVDCommsBuf@@@Z @ 4 NONAME ; void DCommsPond::Free(class DCommsBuf &)
	?AcceptFromClient@DCommsBuf@@SAHPAVDThread@@HPAV1@@Z @ 5 NONAME ; int DCommsBuf::AcceptFromClient(class DThread *, int, class DCommsBuf *)
	?TransferToClient@DCommsBuf@@QAEHPAVDThread@@@Z @ 6 NONAME ; int DCommsBuf::TransferToClient(class DThread *)
	?SetDefaultAllocPool@DCommsPond@@QAEHH@Z @ 7 NONAME ; int DCommsPond::SetDefaultAllocPool(int)
	??1DCommsPond@@QAE@XZ @ 8 NONAME ; DCommsPond::~DCommsPond(void)
	?PanicClient@KernCommsBuf@@SAXPAVDThread@@H@Z @ 9 NONAME ; void KernCommsBuf::PanicClient(class DThread *, int)
	?Alloc@DCommsPond@@QAEHAAVDCommsBuf@@@Z @ 10 NONAME ; int DCommsPond::Alloc(class DCommsBuf &)
	?Load@DCommsPond@@QAEHAAV?$TBuf8@$0JA@@@PAVDThread@@@Z @ 11 NONAME ; int DCommsPond::Load(class TBuf8<144> &, class DThread *)
	?Unload@DCommsPond@@QAEXXZ @ 12 NONAME ; void DCommsPond::Unload(void)
	?Free@DCommsBuf@@QAEXXZ @ 13 NONAME ; void DCommsBuf::Free(void)

