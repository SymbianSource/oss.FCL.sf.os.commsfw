//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @file
//! @SYMTestSuiteName		COMINF-ESOCK-RSocket-PublicAPI-TCP
//! @SYMScriptTestEnvironment	This test script requires a basic ROM with an echo server running.
//!				A Java echo server is provided which runs on ports 10007 (TCP) and 10008 (UDP).
//!				The server receives data on one port and echoes it to another, allowing
//!				one socket to send data to another socket on the same device.
//! @SYMScriptDescription	Tests all public elements of the RSocket class
//!				as a means of confidence that the APIs work as expected.
//! @SYMScriptPurpose		The purpose is to provide a regression test suite of Published All APIs for 
//!				the RSocket class.
//! @SYMScriptInfo		Negative testing is performed to confirm that correct errors are returned 
//!				when incorrect parameters are given.
//! @SYMScriptAutomation	The tests are fully automated using Test Execute Framework and Test Driver.
//! @SYMScriptDependencies 	A PC based IP Echo Server
//! @SYMScriptAuthor		James Mechen, Victor Shamarin
//! @SYMScriptCreationDate	08/12/2006
///////////////////////////////////////////////////////////////////////////////

LOAD_SUITE	T_RSocket
DELAY		2000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0002
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0002
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Open and close a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket is opened and closed with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0002-0001-Open_command05
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0002

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0003
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0003
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Set and get integer socket option on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   SetOpt(TUint, TUint, TInt),
//!				                   GetOpt(TUint, TUint, TInt&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Set socket option to (KSOSendBuf, KSOLSocket, 512).
//!				4. Get the socket option and verify result is (KSOSendBuf, KSOLSocket, 512).
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket option is set and verified correctly.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0003-0001-Open_command05
		COMMAND		RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0003-0001-SetOpt_command06
		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0003-0001-GetOpt_command07
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0003

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0004
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0004
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Set and get descriptor socket option on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   SetOpt(TUint, TUint, const TDesC8&),
//!				                   GetOpt(TUint, TUint, TDes8&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Set socket option to (KSOSendBuf, KSOLSocket, "TEXT").
//!				4. Get the socket option and verify result is (KSOSendBuf, KSOLSocket, "TEXT").
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket option is set and verified correctly.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0004-0001-Open_command05
		COMMAND		RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0004-0001-SetOpt_command06
		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0004-0001-GetOpt_command07
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0004

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0005
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0005
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Transfer socket from one socket server session to another.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Name(),
//!				                   Transfer(),
//!				                   Info(),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server (giving a principal usage of the connection).
//!				2. Open TCP socket.
//!				3. Get the unique system name for the socket.
//!				4. Transfer socket from one socket server session to another.
//!				5. Get protocol information on socket and check that it returns KErrBadHandle to verify transfer success.
//!				6. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Socket transfer is successful (Protocol information returns KErrBadHandle (-8)).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServ1
		CREATE_OBJECT	RSocketServ	RSocketServ2
		CREATE_OBJECT	RSocket	RSocketOrig
		CREATE_OBJECT	RSocket	RSocketNew
		COMMAND			RSocketServ1	Constructor
		COMMAND			RSocketServ1	Connect
		COMMAND			RSocketServ2	Constructor
		COMMAND			RSocketServ2	Connect
		COMMAND			RSocketOrig	Constructor
		COMMAND			RSocketOrig	Open		COMINF-ESOCK-RSocket-PublicAPI-0005-0001-Open_command08
		COMMAND			RSocketOrig	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0005-0001-SetOpt_command09
		COMMAND			RSocketOrig	Name
		COMMAND			RSocketNew	Constructor
		COMMAND			RSocketNew	Transfer		COMINF-ESOCK-RSocket-PublicAPI-0005-0001-Transfer_command13
		COMMAND	!Error=-8	RSocketOrig	Info
		COMMAND			RSocketNew	Close
		COMMAND			RSocketNew	~
		COMMAND			RSocketOrig	Close
		COMMAND			RSocketOrig	~
		COMMAND			RSocketServ1	Close
		COMMAND			RSocketServ1	~
		COMMAND			RSocketServ2	Close
		COMMAND			RSocketServ2	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0005

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0006
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0006
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Send data from one socket (active) and receive on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   RecvOneOrMore(),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using RecvOneOrMore()) on passive socket.
//!				11. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Data is successfully sent/received using TCP with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0006-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0006-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0006-0001-Open_command14
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0006-0001-Open_command17
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0006-0001-Listen_command19
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0006-0001-Accept_command20
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0006-0001-Send_command22
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0006-0001-RecvOneOrMore_command25
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0006-0001-Send_command28
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0006-0001-RecvOneOrMore_command31
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0006-0001-Send_command34
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0006-0001-RecvOneOrMore_command37
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0006

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0007
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0007
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Send data from one socket (active) and receive on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&, TSockXfrLength&),
//!				                   RecvOneOrMore(),
//!				                   GetDisconnectData(),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&, TSockXfrLength&), getting amount of data sent) on active socket.
//!				10. Receive data from the remote host (using RecvOneOrMore()) on passive socket.
//!				11. Get disconnect data on sockets.
//!				12. Shutdown sockets.
//!				13. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Data is successfully sent/received using TCP with no errors (GetDisconnectData returns KErrNotSupported (-5)).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0007-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0007-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0007-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0007-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0007-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0007-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0007-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0007-0001-RecvOneOrMore_command25
		OUTSTANDING	
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0007-0001-Send_command28
		OUTSTANDING	
		COMMAND			RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0007-0001-RecvOneOrMore_command31
		OUTSTANDING	
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0007-0001-Send_command34
		OUTSTANDING	
		COMMAND			RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0007-0001-RecvOneOrMore_command37
		OUTSTANDING	
		COMMAND	!Error=-5	RSocketActive	GetDisconnectData
		COMMAND			RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0007

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0008
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0008
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Send data from one socket (active) and receive on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Write(),
//!				                   Read(),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Write()) on active socket.
//!				10. Receive data from the remote host (using Read()) on passive socket.
//!				11. Shutdown sockets.
//!				12. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Data is successfully sent/received using TCP with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Open_command14
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Open_command17
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Listen_command19
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Accept_command20
		COMMAND		RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Write_command22
		OUTSTANDING	
		COMMAND		RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Read_command25
		OUTSTANDING	
		COMMAND		RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Write_command28
		OUTSTANDING	
		COMMAND		RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Read_command31
		OUTSTANDING	
		COMMAND		RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Write_command34
		OUTSTANDING	
		COMMAND		RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Read_command37
		OUTSTANDING	
		COMMAND		RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Read_command39
		OUTSTANDING	
		COMMAND		RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Read_command41
		OUTSTANDING	
		COMMAND		RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Read_command43
		OUTSTANDING	
		COMMAND		RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Read_command45
		COMMAND		RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Write_command47
		DELAY	100000
		COMMAND		RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Write_command49
		DELAY	100000
		COMMAND		RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Write_command51
		OUTSTANDING	
		COMMAND		RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Write_command54
		OUTSTANDING	
		COMMAND		RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0008-0001-Read_command57
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Shutdown
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0008

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0009
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0009
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Send data from one socket (active) and receive on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Recv(TDes8&, TUint, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using Recv(TDes8&, TUint, TRequestStatus&)) on passive socket.
//!				11. Shutdown sockets.
//!				12. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Data is successfully sent/received using TCP with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Open_command14
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Open_command17
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Listen_command19
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Accept_command20
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Send_command22
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Recv_command25
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Send_command28
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Recv_command31
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Send_command34
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Recv_command37
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Recv_command39
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Recv_command41
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Recv_command43
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Recv_command45
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Send_command47
		DELAY	100000
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Send_command49
		DELAY	100000
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Send_command51
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Send_command54
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0009-0001-Recv_command57
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Shutdown
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0009

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0010
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0010
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Send data from one socket (active) and receive on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Recv(TDes8&, TUint, TRequestStatus&, TSockXfrLength&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using Recv(TDes8&, TUint, TRequestStatus&, TSockXfrLength&), getting amount of data read) on passive socket.
//!				11. Shutdown sockets.
//!				12. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Data is successfully sent/received using TCP with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Open_command14
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Open_command17
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Listen_command19
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Accept_command20
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Send_command22
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Recv_command25
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Send_command28
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Recv_command31
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Send_command34
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Recv_command37
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Recv_command39
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Recv_command41
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Recv_command43
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Recv_command45
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Send_command47
		DELAY	100000
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Send_command49
		DELAY	100000
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Send_command51
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Send_command54
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0010-0001-Recv_command57
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Shutdown
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0010

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0012
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0012
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Call various get commands on connected TCP sockets.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   RecvOneOrMore(),
//!				                   Info(),
//!				                   LocalName(),
//!				                   LocalPort(),
//!				                   Name(),
//!				                   RemoteName(),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using RecvOneOrMore()) on passive socket.
//!				11. Get TCP protocol information and verify the details are correct for TCP (according to RSocketServ::FindProtocol()).
//!				12. Get local address of the socket and verify it is the local IP address.
//!				13. Get local port number of the socket and verify it is port number set earlier.
//!				14. Get unique system name for the socket.
//!				15. Get remote name of a connected socket and verify it is the local IP address.
//!				16. Shutdown sockets.
//!				17. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	TCP get commands are called and verified successfully with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-Open_command05
		COMMAND		RSocketActive	Bind		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-Bind_command06
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-Open_command14
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-Open_command17
		COMMAND		RSocketPassive	SetLocalPort		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-SetLocalPort_command18
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-Listen_command19
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-Accept_command20
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-Send_command22
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-RecvOneOrMore_command25
		OUTSTANDING	
		COMMAND		RSocketActive	Info		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-Info_command28
		COMMAND		RSocketActive	LocalName
		COMMAND		RSocketActive	LocalPort		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-LocalPort_command30
		COMMAND		RSocketActive	Name
		COMMAND		RSocketActive	RemoteName		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-RemoteName_command32
		COMMAND		RSocketPassive	LocalName		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-LocalName_command34
		COMMAND		RSocketPassive	LocalPort		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-LocalPort_command35
		COMMAND		RSocketPassive	Name
		COMMAND		RSocketPassive	RemoteName
		COMMAND		RSessionSocket	LocalName		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-LocalName_command39
		COMMAND		RSessionSocket	LocalPort		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-LocalPort_command40
		COMMAND		RSessionSocket	Name
		COMMAND		RSessionSocket	RemoteName
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-Send_command44
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0012-0001-Recv_command47
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Shutdown
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0012

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0013
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0013
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Send data from one socket (active) and cancel accept on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   CancelAccept(),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Cancel accept on passive socket.
//!				11. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Accept is cancelled successfully with KErrCancel (-3).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0013-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0013-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0013-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0013-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0013-0001-Listen_command19
		COMMAND	!AsyncError=-3	RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0013-0001-Accept_command20
		COMMAND			RSocketPassive	CancelAccept
		OUTSTANDING	
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0013-0001-Send_command24
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0013

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0014
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0014
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Cancel connecting socket to remote host, using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   CancelConnect(),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Bind socket to address.
//!				4. Connect socket to remote host.
//!				5. Cancel connect.
//!				6. Close socket.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Connect is cancelled successfully with KErrCancel (-3).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0014-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND	!AsyncError=-3	RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0014-0001-Connect_command07
		COMMAND			RSocketActive	CancelConnect
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0014

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0015
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0015
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Cancel sending data from one socket (active) and cancel receiving on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Write(),
//!				                   Read(),
//!				                   CancelRead(),
//!				                   CancelWrite(),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Write()) on active socket.
//!				10. Receive data from the remote host (using Read()) on passive socket.
//!				11. Cancel send on active socket.
//!				12. Cancel receive on passive socket.
//!				13. Shutdown sockets.
//!				14. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Send and receive are cancelled successfully with KErrCancel (-3).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Accept_command20
		COMMAND			RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Write_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Read_command25
		OUTSTANDING	
		COMMAND	!AsyncError=-3	RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Read_command28
		COMMAND			RSessionSocket	CancelRead
		OUTSTANDING	
		COMMAND			RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Write_command32
		OUTSTANDING	
		COMMAND			RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-RecvOneOrMore_command35
		OUTSTANDING	
		COMMAND			RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-SetOpt_command38
		COMMAND			RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Write_command39
		OUTSTANDING	
		COMMAND	!AsyncError=-3	RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Write_command42
		COMMAND			RSocketActive	CancelWrite
		OUTSTANDING	
		DELAY	5000000
		COMMAND			RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-SetOpt_command47
		COMMAND			RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Write_command48
		OUTSTANDING	
		DELAY	1000000
		COMMAND			RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Write_command52
		OUTSTANDING	
		DELAY	1000000
		COMMAND			RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Write_command56
		OUTSTANDING	
		DELAY	1000000
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Shutdown_command60
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Shutdown_command65
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0015-0001-Shutdown_command70
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~
		DELAY	2000000
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0015

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0016
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0016
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Cancel sending data from one socket (active) and cancel receiving on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Recv(TDes8&, TUint, TRequestStatus&),
//!				                   CancelRecv(),
//!				                   CancelSend(),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using Recv(TDes8&, TUint, TRequestStatus&)) on passive socket.
//!				11. Cancel send on active socket.
//!				12. Cancel receive on passive socket.
//!				13. Shutdown sockets.
//!				14. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Send and receive are cancelled successfully with KErrCancel (-3).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Recv_command25
		OUTSTANDING	
		COMMAND	!AsyncError=-3	RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Recv_command28
		COMMAND			RSessionSocket	CancelRecv
		OUTSTANDING	
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Send_command32
		OUTSTANDING	
		COMMAND			RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-RecvOneOrMore_command35
		OUTSTANDING	
		COMMAND			RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-SetOpt_command38
		COMMAND			RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Write_command39
		OUTSTANDING
		COMMAND	!AsyncError=-3	RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Send_command43
		COMMAND			RSocketActive	CancelSend
		OUTSTANDING	
		DELAY	5000000
		COMMAND			RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-SetOpt_command48
		COMMAND			RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Write_command49
		OUTSTANDING	
		DELAY	1000000
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Send_command53
		OUTSTANDING	
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Send_command56
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Shutdown_command59
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Shutdown_command64
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0016-0001-Shutdown_command69
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~
		DELAY	2000000
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0016

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0017
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0017
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Send data from one socket (active) and cancel accept on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   CancelAll(),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Cancel all on passive socket.
//!				11. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Accept is cancelled successfully with KErrCancel (-3).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0017-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0017-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0017-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0017-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0017-0001-Listen_command19
		COMMAND	!AsyncError=-3	RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0017-0001-Accept_command20
		COMMAND			RSocketPassive	CancelAll
		OUTSTANDING	
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0017-0001-Send_command24
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0017

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0018
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0018
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Cancel connecting socket to remote host, using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   CancelAll(),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Bind socket to address.
//!				4. Connect socket to remote host.
//!				5. Cancel all.
//!				6. Close socket.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Connect is cancelled successfully with KErrCancel (-3).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0018-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND	!AsyncError=-3	RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0018-0001-Connect_command07
		COMMAND			RSocketActive	CancelAll
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0018

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0019
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0019
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Cancel sending data from one socket (active) and cancel receiving on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Write(),
//!				                   Read(),
//!				                   CancelAll(),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Write()) on active socket.
//!				10. Receive data from the remote host (using Read()) on passive socket.
//!				11. Cancel all on active socket.
//!				12. Cancel all on passive socket.
//!				13. Shutdown sockets.
//!				14. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Send and receive are cancelled successfully with KErrCancel (-3).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0019-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0019-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0019-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0019-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0019-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0019-0001-Accept_command20
		COMMAND			RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0019-0001-Write_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0019-0001-Read_command25
		OUTSTANDING	
		COMMAND	!AsyncError=-3	RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0019-0001-Read_command28
		COMMAND			RSessionSocket	CancelAll
		OUTSTANDING	
		COMMAND			RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0019-0001-Write_command32
		OUTSTANDING	
		COMMAND			RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0019-0001-Read_command35
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0019

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0020
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0020
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Cancel sending data from one socket (active) and cancel receiving on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Recv(TDes8&, TUint, TRequestStatus&),
//!				                   CancelAll(),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using Recv(TDes8&, TUint, TRequestStatus&)) on passive socket.
//!				11. Cancel all on active socket.
//!				12. Cancel all on passive socket.
//!				13. Shutdown sockets.
//!				14. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Send and receive are cancelled successfully with KErrCancel (-3).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0020-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0020-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0020-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0020-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0020-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0020-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0020-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0020-0001-Recv_command25
		OUTSTANDING	
		COMMAND	!AsyncError=-3	RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0020-0001-Recv_command28
		COMMAND			RSessionSocket	CancelAll
		OUTSTANDING	
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0020-0001-Send_command32
		OUTSTANDING	
		COMMAND			RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0020-0001-Recv_command35
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0020

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0021
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0021
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Apply I/O control operation and cancel it on TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Ioctl(),
//!				                   CancelIoctl(),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server (giving a principal usage of the connection).
//!				2. Open TCP socket.
//!				3. Apply I/O control operation (KIOctlSelect, KSOLSocket).
//!				4. Cancel I/O control operation.
//!				5. Shutdown socket.
//!				6. Close socket.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	TCP I/O control operation is successfully cancelled with KErrCancel (-3).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0021-0001-Open_command05
		COMMAND	!AsyncError=-3	RSocketActive	Ioctl		COMINF-ESOCK-RSocket-PublicAPI-0021-0001-Ioctl_command06
		COMMAND			RSocketActive	CancelIoctl
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0021

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0022
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0022
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Apply I/O control operation and cancel it on TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Ioctl(),
//!				                   CancelAll(),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Apply I/O control operation (KIOctlSelect, KSOLSocket).
//!				4. Cancel all.
//!				5. Shutdown socket.
//!				6. Close socket.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	TCP I/O control operation is successfully cancelled with KErrCancel (-3).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0022-0001-Open_command05
		COMMAND	!AsyncError=-3	RSocketActive	Ioctl		COMINF-ESOCK-RSocket-PublicAPI-0022-0001-Ioctl_command06
		COMMAND			RSocketActive	CancelAll
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0022

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0023
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0023
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Send data from one socket (active) and receive on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   RecvOneOrMore(),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket (associating with an RConnection interface).
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket (associating with an RConnection interface).
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using RecvOneOrMore()) on passive socket.
//!				11. Shutdown sockets.
//!				12. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Data is successfully sent/received using TCP with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		CREATE_OBJECT	RConnection	RConnectionActive
		CREATE_OBJECT	RConnection	RConnectionPassive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RConnectionActive	Constructor
		COMMAND		RConnectionActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Open_command05
		COMMAND		RConnectionActive	Start		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Start_command06
		OUTSTANDING	
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Open_command10
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Connect_command12
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RConnectionPassive	Constructor
		COMMAND		RConnectionPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Open_command19
		COMMAND		RConnectionPassive	Start		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Start_command20
		OUTSTANDING	
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Open_command24
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Open_command27
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Listen_command29
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Accept_command30
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Send_command32
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-RecvOneOrMore_command35
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Send_command38
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-RecvOneOrMore_command41
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-Send_command44
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0023-0001-RecvOneOrMore_command47
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Shutdown
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~
		COMMAND		RConnectionActive	~
		COMMAND		RConnectionPassive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0023

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0024
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0024
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Send data from one socket (active) and receive on another (passive), using TCP.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   RecvOneOrMore(),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket (associating with an RSubConnection).
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket (associating with an RSubConnection).
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using RecvOneOrMore()) on passive socket.
//!				11. Shutdown sockets.
//!				12. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Data is successfully sent/received using TCP with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		CREATE_OBJECT	RConnection	RConnectionActive
		CREATE_OBJECT	RSubConnection	RSubConnectionActive
		CREATE_OBJECT	RConnection	RConnectionPassive
		CREATE_OBJECT	RSubConnection	RSubConnectionPassive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RConnectionActive	Constructor
		COMMAND		RConnectionActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Open_command05
		COMMAND		RConnectionActive	Start		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Start_command06
		COMMAND		RSubConnectionActive	Constructor
		COMMAND		RSubConnectionActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Open_command09
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Open_command12
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Connect_command14
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RConnectionPassive	Constructor
		COMMAND		RConnectionPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Open_command21
		COMMAND		RConnectionPassive	Start		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Start_command22
		COMMAND		RSubConnectionPassive	Constructor
		COMMAND		RSubConnectionPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Open_command25
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Open_command28
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Open_command31
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Listen_command33
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Accept_command34
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Send_command36
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-RecvOneOrMore_command39
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Send_command42
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-RecvOneOrMore_command45
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-Send_command48
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0024-0001-RecvOneOrMore_command51
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Shutdown
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~
		COMMAND		RSubConnectionActive	~
		COMMAND		RSubConnectionPassive	~
		COMMAND		RConnectionActive	~
		COMMAND		RConnectionPassive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0024

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0028
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0028
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Set and get integer socket option with boolean result on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   SetOpt(TUint, TUint, TInt),
//!				                   GetOpt(TUint, TUint, TInt&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Set socket option to (KSOSendBuf, KSODebug, 1).
//!				4. Get the socket option and verify result is (KSOSendBuf, KSODebug, ETrue).
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket option is set and verified correctly.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0028-0001-Open_command05
		COMMAND		RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0028-0001-SetOpt_command06
		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0028-0001-GetOpt_command07
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0028

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0029
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0029
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Set and get integer socket option with boolean result on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   SetOpt(TUint, TUint, TInt),
//!				                   GetOpt(TUint, TUint, TInt&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Set socket option to (KSOSendBuf, KSODebug, 0).
//!				4. Get the socket option and verify result is (KSOSendBuf, KSODebug, EFalse).
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket option is set and verified correctly.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0029-0001-Open_command05
		COMMAND		RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0029-0001-SetOpt_command06
		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0029-0001-GetOpt_command07
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0029


START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0030
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0030
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Set and get integer socket option with boolean result on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   SetOpt(TUint, TUint, TInt),
//!				                   GetOpt(TUint, TUint, TInt&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Set socket option to (KSOSendBuf, KSONonBlockingIO).
//!				4. Get the socket option and verify result is (KSOSendBuf, KSONonBlockingIO, ETrue).
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket option is set and verified correctly.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0030-0001-Open_command05
		COMMAND		RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0030-0001-SetOpt_command06
		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0030-0001-GetOpt_command07
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0030


START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0031
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0031
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Set and get integer socket option with boolean result on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   SetOpt(TUint, TUint, TInt),
//!				                   GetOpt(TUint, TUint, TInt&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Set socket option to (KSOSendBuf, KSOBlockingIO).
//!				4. Get the socket option and verify result is (KSOSendBuf, KSOBlockingIO, ETrue).
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket option is set and verified correctly.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0031-0001-Open_command05
		COMMAND		RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0031-0001-SetOpt_command06
		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0031-0001-GetOpt_command07
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0031


START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0032
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0032
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Get integer socket option on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   GetOpt(TUint, TUint, TInt&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Get the socket option (KSOSendBuf, KSOSelectPoll).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket option is got correctly.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0032-0001-Open_command05
		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0032-0001-GetOpt_command06
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0032


START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0033
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0033
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Get integer socket option on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   GetOpt(TUint, TUint, TInt&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Get the socket option (KSOSendBuf, KSOReadBytesPending).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket option is got correctly.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0033-0001-Open_command05
		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0033-0001-GetOpt_command06
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0033


START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0034
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0034
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Get integer socket option on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   GetOpt(TUint, TUint, TInt&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Get the socket option (KSOSendBuf, KSOUrgentDataOffset).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket option is got correctly.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0034-0001-Open_command05
		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0034-0001-GetOpt_command06
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0034


START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0035
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0035
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Get integer socket option on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   GetOpt(TUint, TUint, TInt&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Get the socket option (KSOSendBuf, KSOSelectLastError).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket option is got correctly.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0035-0001-Open_command05
		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0035-0001-GetOpt_command06
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0035


START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0036
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0036
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Set and get integer socket option on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   SetOpt(TUint, TUint, TInt),
//!				                   GetOpt(TUint, TUint, TInt&),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Open TCP socket.
//!				3. Set socket option to (KSORecvBuf, KSOLSocket, 512).
//!				4. Get the socket option and verify result is (KSORecvBuf, KSOLSocket, 512).
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket option is set and verified correctly.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0036-0001-Open_command05
		COMMAND		RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0036-0001-SetOpt_command06
		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0036-0001-GetOpt_command07
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0036

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0047
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0047
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that receives data (using RecvFrom) with TCP sockets.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   RecvFrom(TDes8&, TSockAddr&, TUint, TRequestStatus&),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!			 	6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using RecvFrom(TDes8&, TSockAddr&, TUint, TRequestStatus&)) on passive socket.
//!				11. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The RecvFrom() method call is with expected error code KErrNotSupported (-5) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0047-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0047-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0047-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0047-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0047-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0047-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0047-0001-Send_command22
		OUTSTANDING	
		COMMAND	!AsyncError=-5	RSessionSocket	RecvFrom
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0047-0001-Shutdown_command28
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0047-0001-Shutdown_command33
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0047-0001-Shutdown_command38
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0047
DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0049
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0049
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Shutdown(Shutdown:EStopInput) while receiving data using RecvOneOrMore with TCP sockets.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   RecvOneOrMore(),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using RecvOneOrMore()) on passive socket.
//!				11. Shutdown passive socket with TShutdown:EStopInput.
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The RecvOneOrMore() method call is with expected error code KErrEof (-25) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0049-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0049-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0049-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0049-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0049-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0049-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0049-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0049-0001-RecvOneOrMore_command25
		OUTSTANDING	
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0049-0001-Send_command28
		OUTSTANDING	
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0049-0001-Shutdown_command31
		COMMAND	!AsyncError=-25	RSessionSocket	RecvOneOrMore
		OUTSTANDING
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0049

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0050
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0050
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Shutdown(Shutdown:EStopInput) while receiving data using Read with TCP sockets.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Read(TDes8 &, TRequestStatus &),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Shutdown passive socket with TShutdown:EStopInput.
//!				11. Receive data from the remote host (using Read(TDes8 &, TRequestStatus &)) on passive socket.
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Read() method call is with expected error code KErrEof (-25) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0050-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0050-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0050-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0050-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0050-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0050-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0050-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0050-0001-Read_command25
		OUTSTANDING	
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0050-0001-Send_command28
		OUTSTANDING	
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0050-0001-Shutdown_command31
		COMMAND	!AsyncError=-25	RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0050-0001-Read_command32
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0050

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0051
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0051
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Shutdown(Shutdown:EStopInput) while receiving data using Recv with TCP sockets.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Recv(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Shutdown passive socket with TShutdown:EStopInput.
//!				11. Receive data from the remote host (using Recv(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &)) on passive socket.
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Recv() method call is with expected error code KErrEof (-25) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0051-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0051-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0051-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0051-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0051-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0051-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0051-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0051-0001-Recv_command25
		OUTSTANDING	
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0051-0001-Send_command28
		OUTSTANDING	
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0051-0001-Shutdown_command31
		COMMAND	!AsyncError=-25	RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0051-0001-Recv_command32
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0051

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0054
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0054
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that sends data (using Send) synchronously with Shutdown(Shutdown:EStopOutput) with TCP sockets.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Shutdown active socket with TShutdown:EStopOutput.
//!				11. Call outstanding.
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The Send() method call is with expected error code KErrEof (-25) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0054-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0054-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0054-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0054-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0054-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0054-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0054-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0054-0001-Shutdown_command24
		COMMAND	!AsyncError=-25	RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0054-0001-Send_command25
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0054-0001-Shutdown_command29
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0054-0001-Shutdown_command34
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0054-0001-Shutdown_command39
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0054

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0055
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0055
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that sends data (using Write) synchronously with Shutdown(Shutdown:EStopOutput) with TCP sockets.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Write(const TDesC8 &, TRequestStatus &),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Write(const TDesC8 &, TRequestStatus &)) on active socket.
//!				10. Shutdown active socket with TShutdown:EStopOutput.
//!				12. Call outstanding.
//!				13. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The Write() method call is with expected error code KErrCancel (-3) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0055-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0055-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0055-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0055-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0055-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0055-0001-Accept_command20
		COMMAND			RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0055-0001-Write_command22
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0055-0001-Shutdown_command24
		COMMAND	!AsyncError=-25	RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0055-0001-Write_command25
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0055-0001-Shutdown_command29
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0055-0001-Shutdown_command34
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0055-0001-Shutdown_command39
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0055

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0065
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0065
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that cancels (using CancelRecv method) receiving data (using RecvOneOrMore method) with TCP sockets.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(TSockAddr &),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   RecvOneOrMore(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &),
//!				                   CancelRecv(),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using RecvOneOrMore(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &)) on passive socket.
//!				11. Cancel receive on passive socket.
//!				12. Call outstanding.
//!				13. Shutdown sockets.
//!				14. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The RecvOneOrMore() method call is with expected error code KErrCancel (-3) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0065-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0065-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0065-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0065-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0065-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0065-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0065-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0065-0001-RecvOneOrMore_command25
		OUTSTANDING	
		COMMAND	!AsyncError=-3	RSessionSocket	RecvOneOrMore
		COMMAND			RSessionSocket	CancelRecv
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0065-0001-Shutdown_command31
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0065-0001-Shutdown_command36
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0065-0001-Shutdown_command41
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0065

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0074
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0074
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that sends/receives data between TCP sockets without facilitating a client/server connection (using Accept method) from a remote socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&),
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   SetLocalPort(TInt),
//!				                   Listen(TUint),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!				                   RecvOneOrMore(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &),
//!						   Close().
//! @SYMTestActions    		1. Open session to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open sessions to passive socket servers.
//!				6. Open passive TCP socket.
//!				7. Set local port of passive socket.
//!				8. Listen on passive socket for incoming connections.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Shutdown active socket with TShutdown:EImmediate.
//!				11. Close active socket
//!				12. Shutdown passive socket with TShutdown:EImmediate.
//!				13. Close passive socket.
//!				14. Receive data from the remote host (using RecvOneOrMore()) on passive session.
//!				15. Close sessions
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The RecvOneOrMore() method call will panic (ESock code 17).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0074-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0074-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0074-0001-Open_command14
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0074-0001-Open_command17
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0074-0001-Listen_command19
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0074-0001-Send_command21
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0074-0001-Shutdown_command23
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0074-0001-Shutdown_command28
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0074-0001-RecvOneOrMore_command33
		OUTSTANDING	
		COMMAND		RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0074-0001-Shutdown_command36
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	!PanicCode=17  !PanicString=ESock_client  
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0074

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0075
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0075
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Shutdown() method with wrong value on a TCP socket. This shouuld shutdown.
//!				This is then followed by a second call to Shutdown which should fail because the first passed.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Call Shutdown() an active socket with -1.
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Shutdown() method call is with expected error code KErrBadHandle (-8) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0075-0001-Open_command05
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0075-0001-Shutdown_command06
		OUTSTANDING	
		COMMAND	!AsyncError=-8	RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0075-0001-Shutdown_command08
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0075

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0076
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0076
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Test various methods after Shutdown(TShutdown:EImmediate) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&)
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!				                   Info(),
//!						   RemoteName(TSockAddr &),
//!				                   LocalPort(),
//!				                   LocalName(TSockAddr &),
//!						   SetOpt(TUint, TUint, TInt),
//!						   GetOpt(TUint, TUint, TInt),
//!						   CancelAccept(),
//!						   CancelIoctl(),
//!						   CancelRead(),
//!						   CancelRecv(),
//!						   CancelWrite(),
//!						   CancelSend(),
//!						   CancelAll(),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Connect active socket to remote host.
//!				5. Shutdown active socket with TShutdown:EImmediate
//!				6. Get TCP protocol information.
//!				7. Get remote name of a connected socket.
//!				8. Get local port number of the socket of the socket.
//!				9. Get local address of the socket.
//!				10. Set socket option to (KSORecvBuf, KSOLSocket, 1,9).
//!				11. Get socket option for (KSORecvBuf, KSOLSocket).
//!				12. Cancel accept on active socket.
//!				13. Cancel I/O control operation.
//!				14. Cancel read on a socket.
//!				15. Cancel receive on a socket.
//!				16. Cancel write on active socket.
//!				17. Cancel send on active socket.
//!				18. Cancels all outstanding operations.
//!				19. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	All methods working with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0076-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0076-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0076-0001-Shutdown_command09
		OUTSTANDING	
		COMMAND		RSocketActive	Info
		COMMAND		RSocketActive	RemoteName
		COMMAND		RSocketActive	LocalPort
		COMMAND		RSocketActive	LocalName
		COMMAND		RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0076-0001-SetOpt_command15
		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0076-0001-GetOpt_command16
		COMMAND		RSocketActive	CancelAccept
		COMMAND		RSocketActive	CancelIoctl
		COMMAND		RSocketActive	CancelRead
		COMMAND		RSocketActive	CancelRecv
		COMMAND		RSocketActive	CancelWrite
		COMMAND		RSocketActive	CancelSend
		COMMAND		RSocketActive	CancelAll
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0076

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0077
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0077
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Call Ioctl() method on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Ioctl(TUint, TRequestStatus &, TDes8, TUint),
//!						   CancelIoctl(),	
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Apply I/O control operation (KIOctlSelect, KSOLSocket).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Ioctl() method call working with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0077-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0077-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketActive	Ioctl		COMINF-ESOCK-RSocket-PublicAPI-0077-0001-Ioctl_command09
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0077-0001-Open_command15
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0077-0001-Open_command18
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0077-0001-Listen_command20
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0077-0001-Accept_command21
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0077-0001-Send_command23
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0077-0001-RecvOneOrMore_command26
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0077-0001-Send_command29
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0077-0001-RecvOneOrMore_command32
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0077

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0080
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0080
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Open() method with wrong value of socket type (value 0) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket with type of socket 0.
//!				3. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Open() method call returns error code KErrBadName (-28).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND	!Error=-28	RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0080-0001-Open_command05
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0080

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0081
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0081
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Open() method with wrong value of socket type (value -1) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket with type of socket -1.
//!				3. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Open() method call returns error code KErrNotSupported (-5).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND	!Error=-5	RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0081-0001-Open_command05
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0081

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0082
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0082
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Open() method with wrong value of address constant for a protocol family on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket with a protocol family 0.
//!				3. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Open() method call returns error code KErrBadName (-28).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND	!Error=-28	RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0082-0001-Open_command05
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0082

//!DELAY		1000

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0086
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0086
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Open() method on a TCP socket before opening a session.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint).
//! @SYMTestActions    		1. Open active TCP socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Open() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0086-0001-Open_command03
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0086

//!DELAY		1000

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0087
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0087
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls RemoteName() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   RemoteName(TSockAddr &).	
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open a TCP socket.
//!				3. Close socket.
//!				4. Get remote name of a connected socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The RemoteName() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0087-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	RemoteName		COMINF-ESOCK-RSocket-PublicAPI-0087-0001-RemoteName_command07
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0087

//!DELAY		1000

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0088
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0088
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Bind() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   Bind(TSockAddr&).
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close socket.
//!				4. Bind a socket to address.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Bind() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0088-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	Bind
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0088

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0089
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0089
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Bind() method with non existing IP address (255.255.255.255) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind a socket to non existing IP address (255.255.255.255).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Bind() method call returns error code KErrNotFound (-1).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0089-0001-Open_command05
		COMMAND	!Error=-1	RSocketActive	Bind		COMINF-ESOCK-RSocket-PublicAPI-0089-0001-Bind_command06
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0089

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0090
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0090
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Bind() method with wrong port number (-1) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to wrong address of port number (-1).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Bind() method call returns error code KErrTooBig (-40).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0090-0001-Open_command05
		COMMAND	!Error=-40	RSocketActive	Bind		COMINF-ESOCK-RSocket-PublicAPI-0090-0001-Bind_command06
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0090

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0091
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0091
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Bind() method twice for same active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Bind active socket address.
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Bind() method call returns error code KErrAlreadyExists (-11).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0091-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND	!Error=-11	RSocketActive	Bind		COMINF-ESOCK-RSocket-PublicAPI-0091-0001-Bind_command07
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0091

//!DELAY		1000

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0092
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0092
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls CancelSend() method after closing active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   CancelSend().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close socket.
//!				4. Cancel send operation on active socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The CancelSend() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0092-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	CancelSend
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0092

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0093
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0093
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Bind() method after Shutdown(TShutdown:ENormal) method on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Shutdown(TShutdown, TRequestStatus &),	
//!						   Bind(TSockAddr&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Shutdown active socket with TShutdown:ENormal
//!				4. Bind active socket address.
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Bind() method call returns error code KErrBadHandle (-8).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0093-0001-Open_command05
		COMMAND			RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND	!Error=-8	RSocketActive	Bind
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0093

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0094
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0094
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Bind() method after calling Connect() method on active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Connect(TSockAddr&, TRequestStatus&),	
//!						   Bind(TSockAddr&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Connect active socket to remote host.
//!				4. Bind active socket address.
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Bind() method call returns error code KErrAlreadyExists (-11).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0094-0001-Open_command05
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0094-0001-Connect_command06
		OUTSTANDING	
		COMMAND	!Error=-11	RSocketActive	Bind
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0094

//!DELAY		1000

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0095
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0095
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calling Connect() method after closing active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   Connect(TSockAddr&, TRequestStatus&).
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close socket.
//!				4. Connect active socket to remote host.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Connect() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0095-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0095-0001-Connect_command07
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0095

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0097
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0097
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Connect() method twice with same TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&),
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Connect active socket to remote host.
//!				5. Connect same socket to remote host.
//!				6. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Connect() method call is with expected error code KErrAlreadyExists (-11) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0097-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0097-0001-Connect_command07
		OUTSTANDING	
		COMMAND	!AsyncError=-11	RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0097-0001-Connect_command09
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0097-0001-Shutdown_command11
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0097

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0098
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0098
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Connect() method with wrong IP address on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&),
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Connect active socket to remote host with wrong IP address (255.255.255.255).
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Connect() method call is with expected error code KErrBadName (-28) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0098-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND	!AsyncError=-28	RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0098-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0098

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0099
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0099
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Connect() method with wrong port number on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&),
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				4. Bind active socket address.
//!				3. Connect active socket to remote host with wrong port number (-1).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Connect() method call is with expected error code KErrGeneral (-2) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0099-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND	!AsyncError=-2	RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0099-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0099

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0100
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0100
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Connect() method on passive socket to remote host after call Listen() method.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetLocalPort(TInt),
//!						   Listen(TUint),	
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Set local port of passive socket.
//!				4. Listen on passive socket for incoming connections.
//!				5. Connect passive socket to remote host.
//!				6. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Connect() method call will panic (ESock code 2).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0100-0001-Open_command05
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0100-0001-Open_command08
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0100-0001-Listen_command10
		COMMAND		RSocketPassive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0100-0001-Connect_command11
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	!PanicCode=2  !PanicString=ESock_client
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0100

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0101
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0101
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Connect() method on active TCP socket to remote host after calling Shutdown(TShutdown:ENormal) method.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&),
//!						   Shutdown(TShutdown, TRequestStatus &),	
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Shutdown active socket with TShutdown:ENormal
//!				5. Connect active socket to remote host.
//!				6. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Connect() method call is with expected error code KErrBadHandle (-8) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0101-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND	!AsyncError=-8	RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0101-0001-Connect_command09
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0101

//!DELAY		1000

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0102
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0102
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls CancelIoctl() method after closing active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   CancelIoctl().	
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open a TCP socket.
//!				3. Close socket.
//!				4. Cancel I/O control operation.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The CancelIoctl() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServPassive
//!		CREATE_OBJECT	RSocket	RSocketPassive
//!		CREATE_OBJECT	RSocket	RSessionSocket
//!		COMMAND		RSocketServPassive	Constructor
//!		COMMAND		RSocketServPassive	Connect
//!		COMMAND		RSessionSocket	Constructor
//!		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0102-0001-Open_command05
//!		COMMAND		RSocketPassive	Constructor
//!		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0102-0001-Open_command08
//!		COMMAND		RSocketPassive	Close
//!		COMMAND		RSocketPassive	CancelIoctl
//!		COMMAND		RSocketPassive	~
//!		COMMAND		RSessionSocket	Close
//!		COMMAND		RSessionSocket	~
//!		COMMAND		RSocketServPassive	Close
//!		COMMAND		RSocketServPassive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0102

//!DELAY		1000

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0103
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0103
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Listen() method on passive TCP socket after closing active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   Listen(TUint).	
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Close socket.
//!				4. Listen on passive socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Listen() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServPassive
//!		CREATE_OBJECT	RSocket	RSocketPassive
//!		CREATE_OBJECT	RSocket	RSessionSocket
//!		COMMAND		RSocketServPassive	Constructor
//!		COMMAND		RSocketServPassive	Connect
//!		COMMAND		RSessionSocket	Constructor
//!		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0103-0001-Open_command05
//!		COMMAND		RSocketPassive	Constructor
//!		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0103-0001-Open_command08
//!		COMMAND		RSocketPassive	Close
//!		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0103-0001-Listen_command10
//!		COMMAND		RSocketPassive	~
//!		COMMAND		RSessionSocket	Close
//!		COMMAND		RSessionSocket	~
//!		COMMAND		RSocketServPassive	Close
//!		COMMAND		RSocketServPassive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0103

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0104
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0104
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Listen() method on passive TCP socket after call Shutdown(TShutdown:ENormal) method.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetLocalPort(TInt),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!						   Listen(TUint),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Set local port of passive socket.
//!				4. Shutdown passive socket with TShutdown:ENormal
//!				5. Listen on passive socket.
//!				6. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Listen() method call returns error code KErrBadHandle (-8).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0104-0001-Open_command05
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0104-0001-Open_command08
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Shutdown
		OUTSTANDING	
		COMMAND	!Error=-8	RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0104-0001-Listen_command12
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0104

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0106
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0106
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Listen() method on passive TCP socket before setting local port of a socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Listen(TUint),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Listen on passive socket.
//!				4. Close passive socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Listen() method call returns error code KErrBadName (-28).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0106-0001-Open_command05
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0106-0001-Open_command08
		COMMAND	!Error=-28	RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0106-0001-Listen_command09
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0106

DELAY		1000

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0107
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0107
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Listen() method on passive TCP socket with wrong size of listen queue.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetLocalPort(TInt),
//!						   Listen(TUint),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Set local port of passive socket.
//!				4. Listen on passive socket with 0 size of listen queue.
//!				5. Close passive socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Listen() method call returns no error.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0107-0001-Open_command05
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0107-0001-Open_command08
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0107-0001-Listen_command10
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0107

//!DELAY		1000

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0109
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0109
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Accept() method on passive TCP socket after closing a socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   Accept(RSocket&, TRequestStatus&).
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Close passive socket.
//!				4. Facilitate a client/server connection on passive socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Accept() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServPassive
//!		CREATE_OBJECT	RSocket	RSocketPassive
//!		CREATE_OBJECT	RSocket	RSessionSocket
//!		COMMAND		RSocketServPassive	Constructor
//!		COMMAND		RSocketServPassive	Connect
//!		COMMAND		RSessionSocket	Constructor
//!		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0109-0001-Open_command06
//!		COMMAND		RSocketPassive	Constructor
//!		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0109-0001-Open_command09
//!		COMMAND		RSessionSocket	Close
//!		COMMAND		RSessionSocket	Accept		COMINF-ESOCK-RSocket-PublicAPI-0109-0001-Accept_command12
//!		COMMAND		RSessionSocket	~
//!		COMMAND		RSessionSocket	Close
//!		COMMAND		RSessionSocket	~
//!		COMMAND		RSocketServPassive	Close
//!		COMMAND		RSocketServPassive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0109

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0110
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0110
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Accept() method after calling Shutdown(TShutdown:ENormal) with a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetLocalPort(TInt),
//!						   Listen(TUint),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!						   Accept(RSocket&, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Set local port of passive socket.
//!				4. Listen on passive socket.
//!				5. Shutdown passive socket with TShutdown:ENormal
//!				6. Facilitate a client/server connection on passive socket.
//!				7. Close passive socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Accept() method call is with expected error code KErrNotReady (-18) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0110-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0110-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0110-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0110-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0110-0001-Listen_command19
		COMMAND			RSocketPassive	Shutdown
		OUTSTANDING	
		COMMAND	!AsyncError=-18	RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0110-0001-Accept_command22
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0110-0001-Shutdown_command24
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0110

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0111
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0111
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Accept() method before calling Listen() method with a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetLocalPort(TInt),
//!						   Accept(RSocket&, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Set local port of passive socket.
//!				4. Facilitate a client/server connection on passive socket.
//!				5. Close passive socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Accept() method call is with expected error code KErrNotReady (-18) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0111-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0111-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0111-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0111-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND	!AsyncError=-18	RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0111-0001-Accept_command19
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0111-0001-Shutdown_command22
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0111

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0112
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0112
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Accept() method after calling CancelConnect() method with a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetLocalPort(TInt),
//!						   Listen(TUint),
//!				                   CancelConnect(),
//!						   Accept(RSocket&, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Set local port of passive socket.
//!				4. Listen on passive socket.
//!				5. Cancel connect on passive socket.
//!				6. Facilitate a client/server connection on passive socket.
//!				7. Close passive socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Accept() method call is with expected error code KErrNotReady (-18) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0112-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0112-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0112-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0112-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0112-0001-Listen_command19
		COMMAND			RSocketPassive	CancelConnect
		COMMAND	!AsyncError=-18	RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0112-0001-Accept_command21
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0112-0001-Shutdown_command24
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0112

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0113
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0113
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls CancelAccept() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetLocalPort(TInt),
//!						   Listen(TUint),
//!						   Close(),
//!						   CancelAccept().	
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Set local port of passive socket.
//!				4. Listen on passive socket.
//!				5. Close passive socket.
//!				6. Cancel accept on passive socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The CancelAccept() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		CREATE_OBJECT	RSocketServ	RSocketServPassive
//!		CREATE_OBJECT	RSocket	RSocketPassive
//!		CREATE_OBJECT	RSocket	RSessionSocket
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0113-0001-Open_command05
//!		COMMAND		RSocketActive	Bind
//!		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0113-0001-Connect_command07
//!		OUTSTANDING	
//!		COMMAND		RSocketServPassive	Constructor
//!		COMMAND		RSocketServPassive	Connect
//!		COMMAND		RSessionSocket	Constructor
//!		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0113-0001-Open_command14
//!		COMMAND		RSocketPassive	Constructor
//!		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0113-0001-Open_command17
//!		COMMAND		RSocketPassive	SetLocalPort
//!		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0113-0001-Listen_command19
//!		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0113-0001-Shutdown_command21
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSessionSocket	Close
//!		COMMAND		RSessionSocket	CancelAccept 
//!		COMMAND		RSessionSocket	~
//!		COMMAND		RSocketServPassive	Close
//!		COMMAND		RSocketServPassive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0113
 
//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0114
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0114
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls CancelAll() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   CancelAll().	
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close active socket.
//!				4. Cancel all on active socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The CancelAll() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0114-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	CancelAll
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0114

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0116
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0116
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls CancelConnect() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&),
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Close(),
//!						   CancelConnect().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Connect active socket to remote host.
//!				5. Close active socket.
//!				6. Cancel connect on active socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The CancelConnect() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0116-0001-Open_command05
//!		COMMAND		RSocketActive	Bind
//!		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0116-0001-Connect_command07
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0116-0001-Shutdown_command09
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	CancelConnect
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0116

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0117
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0117
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Info() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!				                   Info().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close socket.
//!				4. Get TCP protocol information.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Info() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0117-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	Info
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0117

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0118
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0118
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls LocalName() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!				                   LocalName(TSockAddr &).
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close socket.
//!				4. Get local address of the socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The LocalName() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0118-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	LocalName
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0118

//! START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0119
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0119
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls LocalPort() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!				                   LocalPort().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close socket.
//!				4. Get local port number of the socket of the socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The LocalPort() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//! 	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//! 		CREATE_OBJECT	RSocketServ	RSocketServActive
//! 		CREATE_OBJECT	RSocket	RSocketActive
//! 		COMMAND		RSocketServActive	Constructor
//! 		COMMAND		RSocketServActive	Connect
//! 		COMMAND		RSocketActive	Constructor
//! 		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0119-0001-Open_command05
//! 		COMMAND		RSocketActive	Close
//! 		COMMAND		RSocketActive	LocalPort
//! 		COMMAND		RSocketActive	~
//! 		COMMAND		RSocketServActive	Close
//! 		COMMAND		RSocketServActive	~		
//! 	END_TEST_BLOCK	!PanicCode=0
//! END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0119

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0120
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0120
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Shutdown() method twice for same active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Shutdown active socket with TShutdown:ENormal
//!				4. Shutdown active socket with TShutdown:EImmediate
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Shutdown() method call is with expected error code KErrBadHandle (-8) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0120-0001-Open_command05
		COMMAND			RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND	!AsyncError=-8	RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0120-0001-Shutdown_command08
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0120

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0121
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0121
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Shutdown() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   Shutdown(TShutdown, TRequestStatus &).
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close socket.
//!				4. Shutdown active socket with TShutdown:ENormal
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Shutdown() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0121-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	Shutdown
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0121

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0122
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0122
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls SetOpt() method with wrong value of option name on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetOpt(TUint, TUint, TInt),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Set socket option to (-1, KSOLSocket, 1).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The SetOpt() method call returns error code KErrAccessDenied (-21).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0122-0001-Open_command05
		COMMAND	!Error=-21	RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0122-0001-SetOpt_command06
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0122

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0123
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0123
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls SetOpt() method with wrong value of option level on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetOpt(TUint, TUint, TInt),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Set socket option to (KSORecvBuf, -1, 1).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The SetOpt() method call returns error code KErrNotSupported (-5).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0123-0001-Open_command05
		COMMAND	!Error=-5	RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0123-0001-SetOpt_command06
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0123

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0124
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0124
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls SetOpt() method with wrong combination of option level and name on a TCP socket. (use option only for GetOpt)
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetOpt(TUint, TUint, TInt),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Set socket option to (KSOSelectLastError, KSOLSocket, 1). (Only for GetOpt)
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The SetOpt() method call returns error code KErrNotSupported (-5).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0124-0001-Open_command05
		COMMAND	!Error=-5	RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0124-0001-SetOpt_command06
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0124

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0125
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0125
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls GetOpt() method with wrong value of option name on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   GetOpt(TUint, TUint, TInt),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Get socket option for (-1, KSOLSocket, 1).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The GetOpt() method call returns error code KErrAccessDenied (-21).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0125-0001-Open_command05
		COMMAND	!Error=-21	RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0125-0001-GetOpt_command06
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0125

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0126
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0126
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls GetOpt() method with wrong value of option level on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   GetOpt(TUint, TUint, TInt),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Get socket option for (KSORecvBuf, -1, 1).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The GetOpt() method call returns error code KErrNotSupported (-5).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0126-0001-Open_command05
		COMMAND	!Error=-5	RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0126-0001-GetOpt_command06
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0126

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0127
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0127
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls SetOpt() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   SetOpt(TUint, TUint, TDesC8).
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close socket.
//!				4. Set socket option for (KSORecvBuf, KSOLSocket, TDesC8).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The SetOpt() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0127-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0127-0001-SetOpt_command07
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0127

//! START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0128
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0128
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls GetOpt() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   GetOpt(TUint, TUint, TDesC8).
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close socket.
//!				4. Get socket option for (KSORecvBuf, KSOLSocket, TDesC).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The GetOpt() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//! 	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//! 		CREATE_OBJECT	RSocketServ	RSocketServActive
//! 		CREATE_OBJECT	RSocket	RSocketActive
//! 		COMMAND		RSocketServActive	Constructor
//! 		COMMAND		RSocketServActive	Connect
//! 		COMMAND		RSocketActive	Constructor
//! 		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0128-0001-Open_command05
//! 		COMMAND		RSocketActive	Close
//! 		COMMAND		RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0128-0001-GetOpt_command07
//! 		COMMAND		RSocketActive	~
//! 		COMMAND		RSocketServActive	Close
//! 		COMMAND		RSocketServActive	~		
//! 	END_TEST_BLOCK	!PanicCode=0
//! END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0128

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0129
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0129
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls SetOpt() method with wrong type of option value a TCP socket (don't use Capability).
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetOpt(TUint, TUint, TDesC8),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Set socket option to (KSOEnableTransfer, KSOLSocket).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The SetOpt() method call returns error KErrArgument (-6).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0129-0001-Open_command05
		COMMAND	!Error=-6	RSocketActive	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0129-0001-SetOpt_command06
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0129

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0130
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0130
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls GetOpt() method with wrong combination of option level and name on a TCP socket. (Use option only for SetOpt)
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   GetOpt(TUint, TUint, TDesC8),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Get socket option to (KSOEnableTransfer, KSOLSocket, TDesC8).
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The GetOpt() method call returns error code KErrNotSupported (-5).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0130-0001-Open_command05
		COMMAND	!Error=-5	RSocketActive	GetOpt		COMINF-ESOCK-RSocket-PublicAPI-0130-0001-GetOpt_command06
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0130

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0131
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0131
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Name() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   Name(TName &).		
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close socket.
//!				4. Get the unique system name for the socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Name() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0131-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	Name
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0131

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0132
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0132
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Transfer() method with wrong parameter of name on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetOpt(TUint, TUint, TDesC8),
//!						   Transfer(RSocketServ &, const TDesC &), 	
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Set socket option to (KSOEnableTransfer, KSOLSocket, Capabilities).
//!				4. Transfer socket from one socket server session to another. (wrong name 'abcd')
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Transfer() method call returns error code KErrNotFound (-1).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServ1
		CREATE_OBJECT	RSocketServ	RSocketServ2
		CREATE_OBJECT	RSocket	RSocketOrig
		CREATE_OBJECT	RSocket	RSocketNew
		COMMAND			RSocketServ1	Constructor
		COMMAND			RSocketServ1	Connect
		COMMAND			RSocketServ2	Constructor
		COMMAND			RSocketServ2	Connect
		COMMAND			RSocketOrig	Constructor
		COMMAND			RSocketOrig	Open		COMINF-ESOCK-RSocket-PublicAPI-0132-0001-Open_command08
		COMMAND			RSocketOrig	SetOpt		COMINF-ESOCK-RSocket-PublicAPI-0132-0001-SetOpt_command09
		COMMAND			RSocketNew	Constructor
		COMMAND	!Error=-1	RSocketNew	Transfer		COMINF-ESOCK-RSocket-PublicAPI-0132-0001-Transfer_command12
		COMMAND			RSocketNew	Close
		COMMAND			RSocketNew	~
		COMMAND			RSocketOrig	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0132-0001-Shutdown_command17
		OUTSTANDING	
		COMMAND			RSocketOrig	Close
		COMMAND			RSocketOrig	~
		COMMAND			RSocketServ1	Close
		COMMAND			RSocketServ1	~
		COMMAND			RSocketServ2	Close
		COMMAND			RSocketServ2	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0132

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0133
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0133
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Transfer() method on a TCP socket without setting option KSOEnableTransfer.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Name(TName &),
//!						   Transfer(RSocketServ &, const TDesC &), 	
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Get the unique system name for the socket.
//!				4. Transfer socket from one socket server session to another.
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Transfer() method call returns error code KErrPermissionDenied (-46).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServ1
		CREATE_OBJECT	RSocketServ	RSocketServ2
		CREATE_OBJECT	RSocket	RSocketOrig
		CREATE_OBJECT	RSocket	RSocketNew
		COMMAND			RSocketServ1	Constructor
		COMMAND			RSocketServ1	Connect
		COMMAND			RSocketServ2	Constructor
		COMMAND			RSocketServ2	Connect
		COMMAND			RSocketOrig	Constructor
		COMMAND			RSocketOrig	Open		COMINF-ESOCK-RSocket-PublicAPI-0133-0001-Open_command08
		COMMAND			RSocketOrig	Name
		COMMAND			RSocketNew	Constructor
		COMMAND	!Error=-46	RSocketNew	Transfer		COMINF-ESOCK-RSocket-PublicAPI-0133-0001-Transfer_command12
		COMMAND			RSocketNew	Close
		COMMAND			RSocketNew	~
		COMMAND			RSocketOrig	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0133-0001-Shutdown_command17
		OUTSTANDING	
		COMMAND			RSocketOrig	Close
		COMMAND			RSocketOrig	~
		COMMAND			RSocketServ1	Close
		COMMAND			RSocketServ1	~
		COMMAND			RSocketServ2	Close
		COMMAND			RSocketServ2	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0133

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0134
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0134
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Transfer() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   Transfer(RSocketServ &, const TDesC &).		
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close socket.
//!				4. Transfer socket from one socket server session to another.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Transfer() method call returns error code KErrNotFound (-1).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServ1
		CREATE_OBJECT	RSocketServ	RSocketServ2
		CREATE_OBJECT	RSocket	RSocketOrig
		CREATE_OBJECT	RSocket	RSocketNew
		COMMAND			RSocketServ1	Constructor
		COMMAND			RSocketServ1	Connect
		COMMAND			RSocketServ2	Constructor
		COMMAND			RSocketServ2	Connect
		COMMAND			RSocketOrig	Constructor
		COMMAND			RSocketOrig	Open		COMINF-ESOCK-RSocket-PublicAPI-0134-0001-Open_command08
		COMMAND			RSocketOrig	Name
		COMMAND			RSocketOrig	Close
		COMMAND	!Error=-1	RSocketOrig	Transfer		COMINF-ESOCK-RSocket-PublicAPI-0134-0001-Transfer_command11
		COMMAND			RSocketOrig	~
		COMMAND			RSocketServ2	Close
		COMMAND			RSocketServ2	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0134

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0135
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0135
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls CancelWrite() method after closing a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   CancelWrite().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Close socket.
//!				4. Cancel write on active socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The CancelWrite() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0135-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	CancelWrite
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0135

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0138
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0138
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Ioctl() method with wrong operation level (-1) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Ioctl(TUint, TRequestStatus &, TDes8, TUint),
//!						   CancelIoctl(),	
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Apply I/O control operation (KIOctlSelect, -1).
//!				4. Cancel I/O control operation.
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Ioctl() method call returns error code KErrNotSupported (-5).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0138-0001-Open_command05
		COMMAND	!AsyncError=-5	RSocketActive	Ioctl		COMINF-ESOCK-RSocket-PublicAPI-0138-0001-Ioctl_command06
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0138

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0139
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0139
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Ioctl() method with wrong value of command (-1) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Ioctl(TUint, TRequestStatus &, TDes8, TUint),
//!						   CancelIoctl(),	
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Apply I/O control operation (-1, KSOLSocket).
//!				4. Cancel I/O control operation.
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Ioctl() method call returns error code KErrAccessDenied (-21).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0139-0001-Open_command05
		COMMAND	!AsyncError=-21	RSocketActive	Ioctl		COMINF-ESOCK-RSocket-PublicAPI-0139-0001-Ioctl_command06
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0139

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0141
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0141
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls GetDisconnectData() method after closing active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   GetDisconnectData(TDes8 &).	
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open a TCP socket.
//!				3. Close socket.
//!				4. Get disconnect data on sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The GetDisconnectData() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0141-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	GetDisconnectData
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0141

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0142
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0142
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls SetLocalPort() method after closing active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   SetLocalPort(TInt).
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open a TCP socket.
//!				3. Close socket.
//!				4. Set local port of passive socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The SetLocalPort() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0142-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	SetLocalPort
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0142

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0143
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0143
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls GetDisconnectData() method after calling Shutdown(TShutdown:ENormal) method on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&),
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!						   GetDisconnectData(TDes8 &),	
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open a TCP socket.
//!				3. Bind a socket to address.
//!				4. Connect active socket to remote host.
//!				5. Shutdown active socket with TShutdown:ENormal
//!				6. Get disconnect data on sockets.
//!				7. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The GetDisconnectData() method call returns error code KErrNotSupported (-5).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0143-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0143-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0143-0001-Send_command09
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0143-0001-Shutdown_command11
		OUTSTANDING	
		COMMAND	!Error=-5	RSocketActive	GetDisconnectData
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0143

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0144
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0144
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls CancelRecv() method after closing active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   CancelRecv().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open a TCP socket.
//!				3. Close socket.
//!				4. Cancel receive on a socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The CancelRecv() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0144-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	CancelRecv
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0144

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0145
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0145
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls CancelRead() method after closing active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Close(),
//!						   CancelRead().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open a TCP socket.
//!				3. Close socket.
//!				4. Cancel read on a socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The CancelRead() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0145-0001-Open_command05
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	CancelRead
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0145


START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0146
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0146
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls SetLocalPort() method twice on same passive TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetLocalPort(TInt),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Set local port of passive socket.
//!				4. Set local port of passive socket.
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The SetLocalPort() method call returns error code KErrAlreadyExists (-11)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0146-0001-Open_command05
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0146-0001-Open_command08
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND	!Error=-11	RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0146-0001-Shutdown_command11
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0146

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0147
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0147
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls SetLocalPort() method with wrong port number on passive TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   SetLocalPort(TInt),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Set local port of passive socket with port number -1.
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The SetLocalPort() method call returns error code KErrTooBig (-40)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0147-0001-Open_command05
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0147-0001-Open_command08
		COMMAND	!Error=-40	RSocketPassive	SetLocalPort		COMINF-ESOCK-RSocket-PublicAPI-0147-0001-SetLocalPort_command09
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0147-0001-Shutdown_command10
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0147

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0148
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0148
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls SetLocalPort() method after calling Shutdown(TShutdown:ENormal) method on passive TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!						   SetLocalPort(TInt),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket.
//!				3. Shutdown socket.
//!				4. Set local port of passive socket with port number -1.
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The SetLocalPort() method call returns error code KErrBadHandle (-8)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0148-0001-Open_command05
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0148-0001-Open_command08
		COMMAND			RSocketPassive	Shutdown
		OUTSTANDING	
		COMMAND	!Error=-8	RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0148

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0149
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0149
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Send() method synchronously with calling Write() method to the remote host on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&)
//!						   Connect(TSockAddr&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!						   Write(const TDesC8 &, TRequestStatus &),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Connect active socket to remote host.
//!				5. Send data to the remote host.
//!				6. Write data to the remote host.
//!				7. Call outstanding.
//!				8. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Write() method call will panic (ESock code 4).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0149-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0149-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0149-0001-Send_command09
		COMMAND		RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0149-0001-Write_command10
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0149-0001-Shutdown_command12
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	!PanicCode=4 !PanicString=ESock_client
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0149

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0150
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0150
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Send() method with wrong flag which are passed through to protocol on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&)
//!						   Connect(TSockAddr&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Connect active socket to remote host.
//!				5. Send data to the remote host with flag -1.
//!				6. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Send() method call is with expected error code KErrAccessDenied (-21) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0150-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0150-0001-Connect_command07
		OUTSTANDING	
		COMMAND	!ASyncError=-21	RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0150-0001-Send_command09
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0150-0001-Shutdown_command11
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0150

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0151
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0151
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Send() method on unconnected TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&)
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				5. Send data to the remote host.
//!				7. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Send() method call is with expected error code KErrNotReady (-18) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0151-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND	!AsyncError=-18	RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0151-0001-Send_command07
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0151

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0152
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0152
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Send() method after calling Shutdown(TShutdown:ENormal) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&)
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Connect active socket to remote host.
//!				5. Shutdown active socket with TShutdown:ENormal
//!				9. Send data to the remote host (using Send()) on a socket.
//!				7. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Send() method call is with expected error code KErrBadHandle (-8) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0152-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0152-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0152-0001-Shutdown_command09
		OUTSTANDING	
		COMMAND	!AsyncError=-8	RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0152-0001-Send_command11
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0152

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0154
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0154
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Send() method after closing active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&)
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Close().
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Connect active socket to remote host.
//!				5. Close socket.
//!				6. Send data to the remote host.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Send() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0154-0001-Open_command05
//!		COMMAND		RSocketActive	Bind
//!		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0154-0001-Connect_command07
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0154-0001-Shutdown_command09
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0154-0001-Send_command12
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0154

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0155
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0155
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls SendTo() method from active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   SendTo(const TDesC8&, TSockAddr&, TUint, TRequestStatus&),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using SendTo(const TDesC8&, TSockAddr&, TUint, TRequestStatus&)) on active socket.
//!				10. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The SendTo() method call will panic (ESock code 9).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0155-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0155-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0155-0001-Open_command14
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0155-0001-Open_command17
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0155-0001-Listen_command19
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0155-0001-Accept_command20
		COMMAND		RSocketActive	SendTo		COMINF-ESOCK-RSocket-PublicAPI-0155-0001-SendTo_command22
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0155-0001-Shutdown_command25
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0155-0001-Shutdown_command30
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0155-0001-Shutdown_command35
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	!PanicCode=9  !PanicString=ESock_client
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0155

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0158
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0158
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Call Send/Recv methods between TCP sockets after calling Shutdown(Shutdown:EImmediate) and Close() on active socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&),
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   SetLocalPort(TInt),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!				                   RecvOneOrMore(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &),
//!						   Close().
//! @SYMTestActions    		1. Open session to active socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open sessions to passive socket servers.
//!				6. Open passive TCP socket.
//!				7. Set local port of passive socket.
//!				8. Listen on passive socket for incoming connections.
//!				9. Facilitate a client/server connection on passive socket.
//!				10. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				12. Shutdown active socket with TShutdown:EImmediate.
//!				13. Close active socket
//!				14. Receive data from the remote host (using RecvOneOrMore()) on passive session.
//!				15. Close passive sockets.
//!				16. Close sessions
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Data is successfully sent/received using TCP with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0158-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0158-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0158-0001-Open_command14
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0158-0001-Open_command17
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0158-0001-Listen_command19
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0158-0001-Accept_command20
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0158-0001-Send_command22
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0158-0001-Shutdown_command25
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0158-0001-RecvOneOrMore_command30
		OUTSTANDING	
		COMMAND		RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0158-0001-Shutdown_command33
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0158-0001-Shutdown_command38
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0158

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0159
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0159
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Call Send/Recv methods between TCP sockets after calling Shutdown(Shutdown:EImmediate) on passive socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&),
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   SetLocalPort(TInt),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!				                   RecvOneOrMore(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &),
//!						   Close().
//! @SYMTestActions    		1. Open session to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open sessions to passive socket servers.
//!				6. Open passive TCP socket.
//!				7. Set local port of passive socket.
//!				8. Listen on passive socket for incoming connections.
//!				9. Facilitate a client/server connection on passive socket.
//!				10. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				12. Shutdown active socket with TShutdown:EImmediate.
//!				13. Close active socket
//!				14. Shutdown passive socket with TShutdown:EImmediate.
//!				15. Close passive socket.
//!				16. Receive data from the remote host (using RecvOneOrMore()) on passive session.
//!				17. Close sessions
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Data is successfully sent/received using TCP with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0159-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0159-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0159-0001-Open_command14
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0159-0001-Open_command17
		COMMAND		RSocketPassive	SetLocalPort		COMINF-ESOCK-RSocket-PublicAPI-0159-0001-SetLocalPort_command18
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0159-0001-Listen_command19
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0159-0001-Accept_command20
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0159-0001-Send_command22
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0159-0001-Shutdown_command25
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0159-0001-Shutdown_command30
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0159-0001-RecvOneOrMore_command35
		OUTSTANDING	
		COMMAND		RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0159-0001-Shutdown_command38
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0159

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0162
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0162
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls SendTo() method on a TCP sockets. 
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Connect(TSockAddr&, TRequestStatus&),
//!				                   SendTo(const TDesC8&, TSockAddr&, TUint, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open passive TCP socket. Open(KSockStream, KProtocolInetTcp)
//!				3. Open active TCP socket. Open(KSockStream, KProtocolInetTcp)
//!				4. Connect active socket to remote host.
//!				5. Send data to the remote host. (using SendTo(const TDesC8&, TSockAddr&, TUint, TRequestStatus&)) on active socket.
//!				4. Close active socket.
//!				6. Close passive socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The SendTo() method call will panic (ESock code 9).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0162-0001-Open_command08
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0162-0001-Open_command12
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0162-0001-Connect_command14
		OUTSTANDING	
		COMMAND		RSocketActive	SendTo		COMINF-ESOCK-RSocket-PublicAPI-0162-0001-SendTo_command16
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	!PanicCode=9   !PanicString=ESock_client
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0162

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0165
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0165
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Write() method after closing active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&)
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Close(),
//!				                   Write(const TDesC8 &, TRequestStatus &).
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Connect active socket to remote host.
//!				5. Close socket.
//!				9. Send data to the remote host (using Write()) on a socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Write() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0165-0001-Open_command05
//!		COMMAND		RSocketActive	Bind
//!		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0165-0001-Connect_command07
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0165-0001-Shutdown_command09
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0165-0001-Write_command12
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0165

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0166
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0166
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Write() method after calling Shutdown(TShutdown:ENormal) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&)
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!				                   Write(const TDesC8 &, TRequestStatus &),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Connect active socket to remote host.
//!				5. Shutdown active socket with TShutdown:ENormal
//!				9. Send data to the remote host (using Write()) on a socket.
//!				7. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Write() method call is with expected error code KErrBadHandle (-8) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0166-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0166-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0166-0001-Shutdown_command09
		OUTSTANDING	
		COMMAND	!AsyncError=-8	RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0166-0001-Write_command11
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0166

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0167
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0167
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Write() method after calling Shutdown(TShutdown:EStopOutput) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&)
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!				                   Write(const TDesC8 &, TRequestStatus &),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Connect active socket to remote host.
//!				5. Shutdown active socket with TShutdown:EStopOutput
//!				9. Send data to the remote host (using Write()) on a socket.
//!				7. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Write() method call is with expected error code KErrEof (-25) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0167-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0167-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0167-0001-Shutdown_command09
		OUTSTANDING	
		COMMAND	!AsyncError=-25	RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0167-0001-Write_command11
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0167-0001-Shutdown_command13
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0167

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0168
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0168
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Send() method after calling Shutdown(TShutdown:EStopOutput) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(TSockAddr&)
//!						   Connect(TSockAddr&, TRequestStatus&),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket address.
//!				4. Connect active socket to remote host.
//!				5. Shutdown active socket with TShutdown:EStopOutput
//!				6. Send data to the remote host (using Send).
//!				7. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Send() method call is with expected error code KErrEof (-25) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0168-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0168-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0168-0001-Shutdown_command09
		OUTSTANDING	
		COMMAND	!AsyncError=-25	RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0168-0001-Send_command11
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0168-0001-Shutdown_command13
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0168

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0172
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0172
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Write() method on connectionless TCP active socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Write(const TDesC8 &, TRequestStatus &),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Send data to the remote host (using Write()) on a socket.
//!				4. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Write() method call is with expected error code KErrNotReady (-18) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0172-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND	!AsyncError=-18	RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0172-0001-Write_command07
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0172

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0173
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0173
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Recv() method on passive TCP socket after calling Shutdown(TShutdown:EImmediate).
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Recv(TDes8&, TUint, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Shutdown passive socket with TShutdown:EImmediate.
//!				11. Receive data from the remote host (using Recv(TDes8&, TUint, TRequestStatus&)) on passive socket.
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Recv() method call is with expected error code KErrBadHandle (-8) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0173-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0173-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0173-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0173-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0173-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0173-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0173-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0173-0001-Shutdown_command25
		OUTSTANDING	
		COMMAND	!AsyncError=-8	RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0173-0001-Recv_command27
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0173-0001-Shutdown_command30
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0173-0001-Shutdown_command35
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0173

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0174
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0174
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Recv() method on passive TCP socket after closing socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!						   Close(),
//!				                   Recv(TDes8&, TUint, TRequestStatus&).
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Close passive the socket.
//!				11. Receive data from the remote host (using Recv(TDes8&, TUint, TRequestStatus&)) on passive socket.
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Recv() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		CREATE_OBJECT	RSocketServ	RSocketServPassive
//!		CREATE_OBJECT	RSocket	RSocketPassive
//!		CREATE_OBJECT	RSocket	RSessionSocket
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0174-0001-Open_command05
//!		COMMAND		RSocketActive	Bind
//!		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0174-0001-Connect_command07
//!		OUTSTANDING	
//!		COMMAND		RSocketServPassive	Constructor
//!		COMMAND		RSocketServPassive	Connect
//!		COMMAND		RSessionSocket	Constructor
//!		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0174-0001-Open_command14
//!		COMMAND		RSocketPassive	Constructor
//!		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0174-0001-Open_command17
//!		COMMAND		RSocketPassive	SetLocalPort
//!		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0174-0001-Listen_command19
//!		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0174-0001-Accept_command20
//!		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0174-0001-Send_command22
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0174-0001-Shutdown_command26
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketPassive	Close
//!		COMMAND		RSocketPassive	Recv		COMINF-ESOCK-RSocket-PublicAPI-0174-0001-Recv_command32
//!		COMMAND		RSocketPassive	~
//!		COMMAND		RSessionSocket	Close
//!		COMMAND		RSessionSocket	~
//!		COMMAND		RSocketServPassive	Close
//!		COMMAND		RSocketServPassive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0174

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0175
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0175
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Recv() method on passive TCP socket synchronously with calling Shutdown(Shutdown:EStopInput).
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Recv(TDes8&, TUint, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using Recv(TDes8&, TUint, TRequestStatus&)) on passive socket.
//!				11. Shutdown passive socket with TShutdown:EStopInput.
//!				12. Call outstanding.
//!				13. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Recv() method call is with expected error code KErrCancel (-3) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Send_command24
		OUTSTANDING	
		COMMAND			RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Recv_command27
		OUTSTANDING	
		COMMAND	!AsyncError=-3	RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Recv_command29
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Shutdown_command30
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Shutdown_command33
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Shutdown_command38
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0175-0001-Shutdown_command43
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0175

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0176
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0176
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Recv() method on passive TCP socket with wrong flag.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Recv(TDes8&, TUint, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using Recv(TDes8&, TUint, TRequestStatus&)) on passive socket
//!					flag -1.
//!				11. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Recv() method call is with expected error code KErrAccessDenied (-21) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0176-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0176-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0176-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0176-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0176-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0176-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0176-0001-Send_command22
		OUTSTANDING	
		COMMAND	!AsyncError=-21	RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0176-0001-Recv_command25
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0176-0001-Shutdown_command28
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0176

START_TESTCASE COMINF-ESOCK-RSocket-PublicAPI-0177
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0177
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Recv() and Read() methods at the same time on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Recv(TDes8&, TUint, TRequestStatus&),
//!				                   Read(TDes8 &, TRequestStatus &),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				11. Receive data from the remote host (using Recv(TDes8&, TUint, TRequestStatus&)) on passive socket.
//!				12. Receive data from the remote host (using Read(TDes8 &, TRequestStatus &)) on passive socket.
//!				13. Call outstanding.
//!				14. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Read() method call will panic (ESock code 3).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Open_command14
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Open_command17
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Listen_command19
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Accept_command20
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Send_command22
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Recv_command25
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Recv_command28
		COMMAND		RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Read_command29
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Send_command31
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Shutdown_command34
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Shutdown_command39
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0177-0001-Shutdown_command44
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	!PanicCode=3    !PanicString=ESock_client
END_TESTCASE COMINF-ESOCK-RSocket-PublicAPI-0177

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0185
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0185
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls RecvOneOrMore() method after closing passive TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Close(),
//!				                   RecvOneOrMore(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &).
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Close passive the socket.
//!				11. Receive data from the remote host (using RecvOneOrMore()).
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The RecvOneOrMore() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		CREATE_OBJECT	RSocketServ	RSocketServPassive
//!		CREATE_OBJECT	RSocket	RSocketPassive
//!		CREATE_OBJECT	RSocket	RSessionSocket
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0185-0001-Open_command05
//!		COMMAND		RSocketActive	Bind
//!		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0185-0001-Connect_command07
//!		OUTSTANDING	
//!		COMMAND		RSocketServPassive	Constructor
//!		COMMAND		RSocketServPassive	Connect
//!		COMMAND		RSessionSocket	Constructor
//!		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0185-0001-Open_command14
//!		COMMAND		RSocketPassive	Constructor
//!		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0185-0001-Open_command17
//!		COMMAND		RSocketPassive	SetLocalPort
//!		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0185-0001-Listen_command19
//!		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0185-0001-Accept_command20
//!		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0185-0001-Send_command22
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0185-0001-Shutdown_command25
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0185-0001-Shutdown_command30
//!		OUTSTANDING	
//!		COMMAND		RSocketPassive	Close
//!		COMMAND		RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0185-0001-Shutdown_command34
//!		OUTSTANDING	
//!		COMMAND		RSessionSocket	Close
//!		COMMAND		RSessionSocket	~
//!		COMMAND		RSocketPassive	RecvOneOrMore
//!		COMMAND		RSocketPassive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0185

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0186
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0186
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls RecvOneOrMore() method with wrong flag -1 on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   RecvOneOrMore(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using RecvOneOrMore()) with wrong flag -1.
//!				11. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The RecvOneOrMore() method call is with expected error code KErrAccessDenied (-21) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0186-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0186-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0186-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0186-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0186-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0186-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0186-0001-Send_command22
		OUTSTANDING	
		COMMAND	!AsyncError=-21	RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0186-0001-RecvOneOrMore_command25
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0186-0001-Shutdown_command28
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0186-0001-Shutdown_command33
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0186-0001-Shutdown_command38
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0186

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0187
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0187
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls RecvOneOrMore() method after calling Shutdown(TShutdown:EImmediate) on passive TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   RecvOneOrMore(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Shutdown passive socket with TShutdown:EImmediate.
//!				11. Receive data from the remote host (using RecvOneOrMore()).
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The RecvOneOrMore() method call is with expected error code KErrBadHandle (-8) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0187-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0187-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0187-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0187-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0187-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0187-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0187-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0187-0001-Shutdown_command25
		OUTSTANDING	
		COMMAND	!AsyncError=-8	RSessionSocket	RecvOneOrMore
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0187-0001-Shutdown_command30
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0187-0001-Shutdown_command35
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0187

START_TESTCASE COMINF-ESOCK-RSocket-PublicAPI-0188
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0188
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls RecvOneOrMore() and Recv() methods synchronously on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   RecvOneOrMore(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &),
//!				                   Recv(TDes8&, TUint, TRequestStatus&),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using RecvOneOrMore()).
//!				11. Receive data from the remote host (using Recv()).
//!				12. Call outstanding.
//!				13. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Recv() method call will panic (ESock code 3).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Open_command14
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Open_command17
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Listen_command19
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Accept_command20
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Send_command22
		OUTSTANDING	
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Recv_command25
		OUTSTANDING	
		COMMAND		RSessionSocket	RecvOneOrMore		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-RecvOneOrMore_command28
		COMMAND		RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Recv_command29
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Send_command31
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Shutdown_command34
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Shutdown_command39
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0188-0001-Shutdown_command44
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	!PanicCode=3  !PanicString=ESock_client
END_TESTCASE COMINF-ESOCK-RSocket-PublicAPI-0188

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0189
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0189
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls RecvOneOrMore() method synchronously with calling Shutdown(TShutdown:EStopInput) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   RecvOneOrMore(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using RecvOneOrMore()).
//!				11. Shutdown passive socket with TShutdown:EStopInput.
//!				12. Call outstanding.
//!				13. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The RecvOneOrMore() method call is with expected error code KErrCancel (-3) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0189-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0189-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0189-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0189-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0189-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0189-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0189-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0189-0001-Recv_command25
		OUTSTANDING	
		COMMAND	!AsyncError=-3	RSessionSocket	RecvOneOrMore
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0189-0001-Shutdown_command28
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0189-0001-Shutdown_command31
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0189-0001-Shutdown_command36
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0189-0001-Shutdown_command41
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0189

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0190
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0190
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Testing disconnecting active TCP socket after closing it.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP stream a socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Close socket.
//!				6. Delay 20 sec.
//!				7. Open active TCP stream a socket.
//!				8. Bind active socket to address.
//!				9. Connect active socket to remote host.
//!				10. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Open and close connection of sockets working with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0190-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0190-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		DELAY	5000000
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0190-0001-Open_command15
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0190-0001-Connect_command17
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0190-0001-Shutdown_command19
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0190

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0191
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0191
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Read() method after calling Shutdown(TShutdown:EImmediate) on passive TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Read(TDes8 &, TRequestStatus &),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Shutdown passive socket with TShutdown:EImmediate.
//!				11. Receive data from the remote host (using Read()).
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Read() method call is with expected error code KErrBadHandle (-8) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0191-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0191-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0191-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0191-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0191-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0191-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0191-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0191-0001-Shutdown_command25
		OUTSTANDING	
		COMMAND	!AsyncError=-8	RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0191-0001-Read_command27
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0191-0001-Shutdown_command30
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0191-0001-Shutdown_command35
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0191

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0192
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0192
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Read() method synchronously with calling Shutdown(TShutdown:EStopInput) on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Read(TDes8 &, TRequestStatus &),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using Read()).
//!				11. Shutdown passive socket with TShutdown:EStopInput.
//!				12. Call outstanding.
//!				13. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Read() method call is with expected error code KErrCancel (-3) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Recv_command25
		OUTSTANDING	
		COMMAND	!AsyncError=-3	RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Read_command27
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Shutdown_command28
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Shutdown_command31
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Shutdown_command36
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0192-0001-Shutdown_command41
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0192

//!START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0194
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0194
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Read() method after closing passive TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close(),
//!				                   Read(TDes8 &, TRequestStatus &).
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Close passive a socket.
//!				11. Receive data from the remote host (using Read()).
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Read() method call will panic (KERN-ExEC code 0).
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
//!		CREATE_OBJECT	RSocketServ	RSocketServActive
//!		CREATE_OBJECT	RSocket	RSocketActive
//!		CREATE_OBJECT	RSocketServ	RSocketServPassive
//!		CREATE_OBJECT	RSocket	RSocketPassive
//!		CREATE_OBJECT	RSocket	RSessionSocket
//!		COMMAND		RSocketServActive	Constructor
//!		COMMAND		RSocketServActive	Connect
//!		COMMAND		RSocketActive	Constructor
//!		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0194-0001-Open_command05
//!		COMMAND		RSocketActive	Bind
//!		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0194-0001-Connect_command07
//!		OUTSTANDING	
//!		COMMAND		RSocketServPassive	Constructor
//!		COMMAND		RSocketServPassive	Connect
//!		COMMAND		RSessionSocket	Constructor
//!		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0194-0001-Open_command14
//!		COMMAND		RSocketPassive	Constructor
//!		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0194-0001-Open_command17
//!		COMMAND		RSocketPassive	SetLocalPort
//!		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0194-0001-Listen_command19
//!		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0194-0001-Accept_command20
//!		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0194-0001-Send_command22
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0194-0001-Shutdown_command26
//!		OUTSTANDING	
//!		COMMAND		RSocketActive	Close
//!		COMMAND		RSocketActive	~
//!		COMMAND		RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0194-0001-Shutdown_command31
//!		OUTSTANDING	
//!		COMMAND		RSocketPassive	Close
//!		COMMAND		RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0194-0001-Shutdown_command35
//!		OUTSTANDING	
//!		COMMAND		RSessionSocket	Close
//!		COMMAND		RSessionSocket	~
//!		COMMAND		RSocketPassive	Read		COMINF-ESOCK-RSocket-PublicAPI-0194-0001-Read_command40
//!		COMMAND		RSocketPassive	~
//!		COMMAND		RSocketServPassive	Close
//!		COMMAND		RSocketServPassive	~
//!		COMMAND		RSocketServActive	Close
//!		COMMAND		RSocketServActive	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0194

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0196
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0196
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls RecvOneOrMore() method synchronously with calling CancelAll() on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   CancelAll(),
//!				                   RecvOneOrMore(TDes8 &, TUint, TRequestStatus &, TSockXfrLength &),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Receive data from the remote host (using RecvOneOrMore()).
//!				11. Cancels all outstanding operations (using CancelAll()).
//!				10. Call outstanding.
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The RecvOneOrMore() method call is with expected error code KErrCancel (-3) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0196-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0196-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0196-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0196-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0196-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0196-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0196-0001-Send_command22
		OUTSTANDING	
		COMMAND			RSessionSocket	Recv		COMINF-ESOCK-RSocket-PublicAPI-0196-0001-Recv_command25
		OUTSTANDING	
		COMMAND	!AsyncError=-3	RSessionSocket	RecvOneOrMore
		COMMAND			RSessionSocket	CancelAll
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0196-0001-Shutdown_command31
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0196-0001-Shutdown_command36
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0196-0001-Shutdown_command41
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0196

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0197
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0197
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Send() method synchronously with calling CancelAll() on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   CancelAll(),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				10. Cancels all outstanding operations (using CancelAll()).
//!				11. Call outstanding.
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Send() method call is with expected error code KErrCancel (-3) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0197-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0197-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0197-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0197-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0197-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0197-0001-Accept_command20
		COMMAND			RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0197-0001-Send_command22
		OUTSTANDING	
		COMMAND	!AsyncError=-3	RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0197-0001-Send_command24
		COMMAND			RSocketActive	CancelAll
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0197-0001-Shutdown_command28
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0197-0001-Shutdown_command33
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0197-0001-Shutdown_command38
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0197

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0198
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0198
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Write() method synchronously with calling CancelAll() on a TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Write(const TDesC8 &, TRequestStatus &),
//!				                   CancelAll(),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Facilitate a client/server connection on passive socket.
//!				9. Send data to the remote host (using Write(const TDesC8 &, TRequestStatus &)) on active socket.
//!				10. Cancels all outstanding operations (using CancelAll()).
//!				11. Call outstanding.
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Write() method call is with expected error code KErrCancel (-3) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketActive	Constructor
		COMMAND			RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0198-0001-Open_command05
		COMMAND			RSocketActive	Bind
		COMMAND			RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0198-0001-Connect_command07
		OUTSTANDING	
		COMMAND			RSocketServPassive	Constructor
		COMMAND			RSocketServPassive	Connect
		COMMAND			RSessionSocket	Constructor
		COMMAND			RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0198-0001-Open_command14
		COMMAND			RSocketPassive	Constructor
		COMMAND			RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0198-0001-Open_command17
		COMMAND			RSocketPassive	SetLocalPort
		COMMAND			RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0198-0001-Listen_command19
		COMMAND			RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0198-0001-Accept_command20
		COMMAND			RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0198-0001-Write_command22
		OUTSTANDING	
		COMMAND	!AsyncError=-3	RSocketActive	Write		COMINF-ESOCK-RSocket-PublicAPI-0198-0001-Write_command24
		COMMAND			RSocketActive	CancelAll
		OUTSTANDING	
		COMMAND			RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0198-0001-Shutdown_command28
		OUTSTANDING	
		COMMAND			RSocketActive	Close
		COMMAND			RSocketActive	~
		COMMAND			RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0198-0001-Shutdown_command33
		OUTSTANDING	
		COMMAND			RSocketPassive	Close
		COMMAND			RSocketPassive	~
		COMMAND			RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0198-0001-Shutdown_command38
		OUTSTANDING	
		COMMAND			RSessionSocket	Close
		COMMAND			RSessionSocket	~
		COMMAND			RSocketServPassive	Close
		COMMAND			RSocketServPassive	~
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK	
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0198

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0207
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0207
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that sends data (using Send) after calling Shutdown(Shutdown:EStopInput) for passive TCP sockets.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!				                   Bind(),
//!				                   Connect(TSockAddr&, TRequestStatus&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Open(RSocketServ&),
//!				                   SetLocalPort(),
//!				                   Listen(TUint),
//!				                   Accept(RSocket&, TRequestStatus&),
//!				                   Send(const TDesC8&, TUint, TRequestStatus&),
//!				                   Read(TDes8 &, TRequestStatus &),
//!				                   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Bind active socket to address.
//!				4. Connect active socket to remote host.
//!				5. Open passive TCP socket.
//!				6. Set local port of passive socket.
//!				7. Listen on passive socket for incoming connections.
//!				8. Shutdown passive socket with TShutdown:EStopInput.
//!				9. Facilitate a client/server connection on passive socket.
//!				10. Send data to the remote host (using Send(const TDesC8&, TUint, TRequestStatus&)) on active socket.
//!				11. Receive data from the remote host (using Read(TDes8 &, TRequestStatus &)) on passive socket.
//!				12. Close sockets.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Read() method call panics with code ESock 17.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RSocketServ	RSocketServPassive
		CREATE_OBJECT	RSocket	RSocketPassive
		CREATE_OBJECT	RSocket	RSessionSocket
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0207-0001-Open_command05
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0207-0001-Connect_command07
		OUTSTANDING	
		COMMAND		RSocketServPassive	Constructor
		COMMAND		RSocketServPassive	Connect
		COMMAND		RSessionSocket	Constructor
		COMMAND		RSessionSocket	Open		COMINF-ESOCK-RSocket-PublicAPI-0207-0001-Open_command14
		COMMAND		RSocketPassive	Constructor
		COMMAND		RSocketPassive	Open		COMINF-ESOCK-RSocket-PublicAPI-0207-0001-Open_command17
		COMMAND		RSocketPassive	SetLocalPort
		COMMAND		RSocketPassive	Listen		COMINF-ESOCK-RSocket-PublicAPI-0207-0001-Listen_command19
		COMMAND		RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0207-0001-Shutdown_command20
		OUTSTANDING	
		COMMAND		RSocketPassive	Accept		COMINF-ESOCK-RSocket-PublicAPI-0207-0001-Accept_command22
		COMMAND		RSocketActive	Send		COMINF-ESOCK-RSocket-PublicAPI-0207-0001-Send_command24
		OUTSTANDING	
		COMMAND		RSessionSocket	Read		COMINF-ESOCK-RSocket-PublicAPI-0207-0001-Read_command27
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0207-0001-Shutdown_command30
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketPassive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0207-0001-Shutdown_command35
		OUTSTANDING	
		COMMAND		RSocketPassive	Close
		COMMAND		RSocketPassive	~
		COMMAND		RSessionSocket	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0207-0001-Shutdown_command40
		OUTSTANDING	
		COMMAND		RSessionSocket	Close
		COMMAND		RSessionSocket	~
		COMMAND		RSocketServPassive	Close
		COMMAND		RSocketServPassive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	!PanicCode=17    !PanicString=ESock_client
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0207

START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0208
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0208
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		A negative test that calls Shutdown:EImmediate method after Shutdown:EStopInput for same active TCP socket.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint),
//!						   Shutdown(TShutdown, TRequestStatus &),
//!						   Close().
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket.
//!				3. Shutdown active socket with TShutdown:EStopInput
//!				4. Shutdown active socket with TShutdown:EImmediate
//!				5. Close socket.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The Shutdown() method call panics with code ESock 6.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0208-0001-Open_command05
		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0208-0001-Shutdown_command06
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown		COMINF-ESOCK-RSocket-PublicAPI-0208-0001-Shutdown_command08
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK	!PanicCode=6    !PanicString=ESock_client
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0208


START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0209
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0209
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Open TCP socket, associating with an RConnection interface in a different session.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RConnection&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers (giving a principal usage of the connection).
//!				2. Open active TCP socket (associating with an RConnection interface).
//!				3. Shutdown sockets.
//!				4. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Open() call panics with ESock code 23.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RConnection	RConnectionActive
		CREATE_OBJECT	RSocketServ	RSocketServActive2
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketServActive2	Constructor
		COMMAND		RSocketServActive2	Connect
		COMMAND		RConnectionActive	Constructor
		COMMAND		RConnectionActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0209-0001-Open_command08
		COMMAND		RConnectionActive	Start		COMINF-ESOCK-RSocket-PublicAPI-0209-0001-Start_command09
		OUTSTANDING	
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0209-0001-Open_command13
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0209-0001-Connect_command15
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~
		COMMAND		RSocketServActive2	Close
		COMMAND		RSocketServActive2	~
		COMMAND		RConnectionActive	~		
	END_TEST_BLOCK	!PanicCode=23   !PanicString=ESock_client
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0209


START_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0210
//! @SYMTestCaseID		COMINF-ESOCK-RSocket-PublicAPI-0210
//! @SYMAPI			RSocket
//! @SYMTestCaseDesc		Open TCP socket, associating with an RSubConnection interface in a different session.
//!				Uses API elements: Open(RSocketServ&, TUint, TUint, TUint, RSubConnection&),
//!				                   Shutdown(TShutdown, TRequestStatus&),
//!				                   Close()
//! @SYMTestActions    		1. Open sessions to socket servers.
//!				2. Open active TCP socket (associating with an RSubConnection).
//!				3. Shutdown sockets.
//!				4. Close sockets.
//! @SYMTestStatus		Defined
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Open() call panics with ESock code 23.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocket	\comms-infras\esock\T_RSocket\cominf-esock-rsocket-publicapi-tcp.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		CREATE_OBJECT	RSocket	RSocketActive
		CREATE_OBJECT	RConnection	RConnectionActive
		CREATE_OBJECT	RSubConnection	RSubConnectionActive
		CREATE_OBJECT	RSocketServ	RSocketServActive2
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketServActive2	Constructor
		COMMAND		RSocketServActive2	Connect
		COMMAND		RConnectionActive	Constructor
		COMMAND		RConnectionActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0210-0001-Open_command08
		COMMAND		RConnectionActive	Start		COMINF-ESOCK-RSocket-PublicAPI-0210-0001-Start_command09
		COMMAND		RSubConnectionActive	Constructor
		COMMAND		RSubConnectionActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0210-0001-Open_command12
		COMMAND		RSocketActive	Constructor
		COMMAND		RSocketActive	Open		COMINF-ESOCK-RSocket-PublicAPI-0210-0001-Open_command15
		COMMAND		RSocketActive	Bind
		COMMAND		RSocketActive	Connect		COMINF-ESOCK-RSocket-PublicAPI-0210-0001-Connect_command17
		OUTSTANDING	
		COMMAND		RSocketActive	Shutdown
		OUTSTANDING	
		COMMAND		RSocketActive	Close
		COMMAND		RSocketActive	~
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~
		COMMAND		RSocketServActive2	Close
		COMMAND		RSocketServActive2	~
		COMMAND		RSubConnectionActive	~
		COMMAND		RConnectionActive	~		
	END_TEST_BLOCK	!PanicCode=23   !PanicString=ESock_client
END_TESTCASE 			COMINF-ESOCK-RSocket-PublicAPI-0210
