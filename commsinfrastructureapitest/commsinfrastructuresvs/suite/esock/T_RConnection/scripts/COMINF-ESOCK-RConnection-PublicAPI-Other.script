//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @file
//! @SYMTestSuiteName		COMINF-ESOCK-RConnection-PublicAPI-Other
//! @SYMScriptTestEnvironment	This test script requires a basic ROM. An Echo server listening on ports 10007 and 10008.
//				The communicaion to the server is established using the default connection.
//				The supplied commsdat is set up to use NTRAS on Emulator as well as on H/W.
//! @SYMScriptAutomation	The test suites are fully automated using TestDriver and Testexecute

LOAD_SUITE T_RConnection

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0001
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0001
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Open
//! @SYMTestCaseDesc		Verify an RConnection can be opened
//! @SYMTestActions		Connect an RSocketServ.
//! 				Open an instance of RConnection providing the RSocketServ.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The RConnection instance is opened.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0001-Open_command05
		COMMAND		connection1	Close
		ASYNC_DELAY	2000000
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0001

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0002
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0002
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Open, RConnection::Name
//! @SYMTestCaseDesc		Verify an RConnection can be cloned from another RConnection instance
//! @SYMTestActions		Connect an RSocketServ.
//! 				Open an instance of RConnection providing the RSocketServ.
//! 				Open a second instance of RConnection cloned from the first one via its name.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The RConnection instance is cloned.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RSocketServ	socketServ2
		CREATE_OBJECT	RConnection	connection1
		CREATE_OBJECT	RConnection	connection2
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		socketServ2	Constructor
		COMMAND		socketServ2	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0002-Open_command08
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0002-Start_command09
		COMMAND		connection2	Constructor
		COMMAND		connection2	Open		COMINF-ESOCK-RConnection-PublicAPI-0002-Open_command12
		COMMAND		connection2	Close
		COMMAND		connection2	~
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	Close
		COMMAND		socketServ1	~
		COMMAND		socketServ2	Close
		COMMAND		socketServ2	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0002

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0003
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0003
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		03/04/2006
//! @SYMAPI			RConnection::Open
//! @SYMTestCaseDesc		Verify an RConnection cannot be
//!				opened without a valid RSocketServ
//!				instance
//! @SYMTestActions		Instantiate an RSocketServ object
//!				Do not connect the RSocketServ
//!				instance to ESock
//!				Instantiate an RConnection object
//!				Open an instance of RConnection
//!				by passing the RSocketServ object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call fails with Panic Code = 0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0003-Open_command04
//!		COMMAND		connection1	Close
//!		ASYNC_DELAY	2000000
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0003

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0004
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0004
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		03/04/2006
//! @SYMAPI			RConnection::Open
//! @SYMTestCaseDesc		Verify an RConnection can be
//! 				opened twice
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Open the RConnection again providing the same RSocketServ
//!				instance
//!				Close the RConnection and RSocketServ instance
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call returns with KErrNone
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0004-Open_command05
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0004-Open_command06
		COMMAND		connection1	Close
		ASYNC_DELAY	2000000
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0004

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0005
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0005
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Start
//! @SYMTestCaseDesc		Start an RConnection synchronously
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The RConnection instance is started synchronously
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0005-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0005-Start_command06
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0005

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0006
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0006
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Start
//! @SYMTestCaseDesc		Start an RConnection synchronously overriding the preference settings in the CommDb
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously and also provide the connection preferences.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The RConnection instance is started synchronously and using the overidden preferences.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0006-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0006-Start_command06
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0006

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0007
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0007
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Start
//! @SYMTestCaseDesc		Start an RConnection asynchronously
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection asynchronously .
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The RConnection instance is started asynchronously
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0007-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0007-Start_command06
		OUTSTANDING	
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0007

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0008
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0008
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Start
//! @SYMTestCaseDesc		Start an RConnection asynchronously overriding the preference settings in the CommDb
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection asynchronously and also provide the connection preferences.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The RConnection instance is started asynchronously and using the overidden preferences.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0008-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0008-Start_command06
		OUTSTANDING	
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0008

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0009
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0009
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Start
//! @SYMTestCaseDesc		Verify an RConnection can be started multiple times without closing or stopping it
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection asynchronously
//!				Start the RConnection again
//!				Verify the underlying IAP has changed to the second IAP via GetConnectionInfo.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Both calls succeed
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0009-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0009-Start_command06
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0009-Start_command07
		ASYNC_DELAY	2000000
		COMMAND		connection1	EnumerateConnections
		COMMAND		connection1	GetConnectionInfo		COMINF-ESOCK-RConnection-PublicAPI-0009-GetConnectionInfo_command10
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0009

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0011
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0011
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		03/04/2006
//! @SYMAPI			RConnection::Close,
//!				RConnection::EnumerateConnections
//! @SYMTestCaseDesc		Ensure that Close() does not pull down the interface when there are
//!				other connections associated with it
//! @SYMTestActions		Instantiate an RSocketServ object and three RConnection objects
//!				Connect the RSocketServ object
//!				Open and Start the first RConnection specifying the IAP Id preference
//!				Open and Start the second RConnection specifying the same IAP
//!				Id preference as for the first RConnection
//!				Enumerate the connection to ensure only one interface is created
//!				Close the first RConnection
//!				Wait for an appropriate timeout
//!				Enumerate the interfaces again
//!				There should still be a single interface in place
//!	 			Close the second RConnection
//!				Wait for an appropriate timeout
//!				Enumerate the connection again using the third RConnection
//!				There should be no interface present
//!				Close the RSocketServ object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The interface is pulled down only after all connections associated with it are closed
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		CREATE_OBJECT	RConnection	connection2
		CREATE_OBJECT	RConnection	connection3
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0011-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0011-Start_command06
		COMMAND		connection2	Constructor
		COMMAND		connection2	Open		COMINF-ESOCK-RConnection-PublicAPI-0011-Open_command09
		COMMAND		connection2	Start		COMINF-ESOCK-RConnection-PublicAPI-0011-Start_command10
		COMMAND		connection2	EnumerateConnections
		COMMAND		connection2	Close
		COMMAND		connection2	~
		ASYNC_DELAY	2000000
		COMMAND		connection1	EnumerateConnections
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0011

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0018
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0018
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::ProgressNotification
//! @SYMTestCaseDesc		Verify progress notification can be obtained asynchronously for a connection
//! @SYMTestActions		Connect an RSocketServ.
//!				Open a RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use the RConnection to asynchronously request progress notification (ProgressNotification()).
//!				Close the connection.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	All progress should be reported for the connection.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0018-Open_command05
		COMMAND		connection1	ProgressNotification
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0018-Start_command07
		OUTSTANDING	
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0018

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0021
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0021
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::CancelProgressNotification
//! @SYMTestCaseDesc		Verify a progress notification request can be cancelled for a connection
//! @SYMTestActions		Connect an RSocketServ.
//!				Open a RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use the RConnection to asynchronously request progress notification (ProgressNotification()).
//!				Use the RConnection to cancel the ProgressNotification request.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The progress notification request should be cancelled for connection.
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0021-Open_command05
		COMMAND	!AsyncError=-3	connection1	ProgressNotification		COMINF-ESOCK-RConnection-PublicAPI-0021-ProgressNotification_command06
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0021-Start_command07
		COMMAND			connection1	CancelProgressNotification
		OUTSTANDING	
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0021

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0022
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0022
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::CancelProgressNotification
//! @SYMTestCaseDesc		Verify CancelProgressNotification
//!				does not do anything if there is no
//!				outstanding ProgressNotification
//!				request for the connection
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Call CancelProgressNotification
//!				Call ProgressNotification
//!				Close the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The first call should not affect the in any way.
//! 				The second call should cancel the ProgressNotification request successfully
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0022-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0022-Start_command06
		COMMAND		connection1	CancelProgressNotification
		ASYNC_DELAY	1000000
		COMMAND		connection1	ProgressNotification		COMINF-ESOCK-RConnection-PublicAPI-0022-ProgressNotification_command09
		OUTSTANDING	
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0022

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0023
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0023
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Progress
//! @SYMTestCaseDesc		Verify progress notification can be obtained synchronously for a connection
//! @SYMTestActions		Connect an RSocketServ.
//!				Open a RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use the RConnection to synchronously request progress notification (Progress()).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	All progress should be reported for the connection.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0023-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0023-Start_command06
		OUTSTANDING	
		COMMAND		connection1	Progress
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0023

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0024
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0024
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::LastProgressError
//! @SYMTestCaseDesc		Verify the last progress error can be retrieved
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Retrieve the last progress error (LastProgressError()).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The last progress error should report no error
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0024-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0024-Start_command06
		COMMAND		connection1	LastProgressError		COMINF-ESOCK-RConnection-PublicAPI-0024-LastProgressError_command07
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0024

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0025
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0025
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::ServiceChangeNotification
//! @SYMTestCaseDesc		Verify service change notification can be obtained asynchronously for a connection
//! @SYMTestActions		Connect an RSocketServ.
//! 				Open an instance of RConnection providing the RSocketServ.
//! 				Asynchronously call ServiceChangeNotification.
//! 				Change the underlying service.
//! @SYMTestStatus		Implemeted
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The service change notification should return error KErrNotReady for invoking it before Starting the connection.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0025-Open_command05
		COMMAND		!AsyncError=-18 connection1	ServiceChangeNotification		COMINF-ESOCK-RConnection-PublicAPI-0025-ServiceChangeNotification_command06
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0025-Start_command07
		OUTSTANDING	
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0025

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0026
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0026
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::CancelServiceChangeNotification
//! @SYMTestCaseDesc		Verify an asynchronous service change notification can be cancelled for a connection
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Asynchronously call ServiceChangeNotification.
//!				Cancel the asynchronous ServiceChangeNotification request.
//!				Change the underlying service.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The service change notification should be cancelled.(There is still a open defect raised against this test)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0026-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0026-Start_command06
		COMMAND	!AsyncError=-3	connection1	ServiceChangeNotification		COMINF-ESOCK-RConnection-PublicAPI-0026-ServiceChangeNotification_command07
		COMMAND			connection1	CancelServiceChangeNotification
		OUTSTANDING	
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0026

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0027
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0027
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetIntSetting, RConnection::GetBoolSetting, RConnection::GetDesSetting, RConnection::GetLongDesSetting
//! @SYMTestCaseDesc		Verify an int, bool, des8 and des16 settings for the current attached connection can be retrieved from the CommDB
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetIntSetting to retrieve the "Location\PauseAfterDialout".
//!				Use GetBoolSetting to retrieve the "Location\Mobile".
//!				Use GetDesSetting (des8) to retrieve the "Location\Name".
//!				Use GetDesSetting (des16) to retrieve the "ModemBearer\TSYName".
//!				Use GetLongDesSetting to retrieve the "DialOutISP\LoginScript".
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	A CommDB int, bool, des8, des16 and long des settings are successfully retrieved.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection		\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open			COMINF-ESOCK-RConnection-PublicAPI-0027-Open_command05
		COMMAND		connection1	Start			COMINF-ESOCK-RConnection-PublicAPI-0027-Start_command06
		COMMAND		connection1	GetIntSetting		COMINF-ESOCK-RConnection-PublicAPI-0027-GetIntSetting_command07
		COMMAND		connection1	GetBoolSetting		COMINF-ESOCK-RConnection-PublicAPI-0027-GetBoolSetting_command08
		COMMAND		connection1	GetDesSetting		COMINF-ESOCK-RConnection-PublicAPI-0027-GetDesSetting_command09
		COMMAND		connection1	GetLongDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0027-GetLongDesSetting_command10
		COMMAND		connection1	GetDesSetting		COMINF-ESOCK-RConnection-PublicAPI-0027-GetDesSetting_command11
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0027

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0028
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0028
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetIntSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the aSettingName provided is not an integer value
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetIntSetting to retrieve the "Location\Mobile", which has a Boolean value
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Appropriate error code should be returned (KErrBadName)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0028-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0028-Start_command06
		COMMAND	!Error=-28	connection1	GetIntSetting	COMINF-ESOCK-RConnection-PublicAPI-0028-GetIntSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0028

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0029
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0029
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetBoolSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is not a boolean value
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetBoolSetting to retrieve the "IAP/id", which has an integer value
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Appropriate error code should be returned (KErrBadName)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0029-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0029-Start_command06
		COMMAND	!Error=-6	connection1	GetBoolSetting	COMINF-ESOCK-RConnection-PublicAPI-0029-GetBoolSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0029

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0030
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0030
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is does not exist
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetDesSetting(aSettingName, TDes8) to retrieve some garbage setting
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with code=-1 (KErrNotFound)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0030-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0030-Start_command06
		COMMAND	!Error=-1	connection1	GetDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0030-GetDesSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0030

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0031
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0031
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided does not exist
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetDesSetting(aSettingName, TDes16) to retrieve the "ModemBearer/ModemInitString",
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with code=-1(KErrNotFound)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection		\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open			COMINF-ESOCK-RConnection-PublicAPI-0031-Open_command05
		COMMAND			connection1	Start			COMINF-ESOCK-RConnection-PublicAPI-0031-Start_command06
		COMMAND	!Error=-1	connection1	GetLongDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0031-GetLongDesSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0031

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0032
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0032
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetIntSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided does not exist
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetIntSetting to retrieve the "ModemBearer/ModemInitString",
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with code=-1(KErrNotFound)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0032-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0032-Start_command06
		COMMAND	!Error=-1	connection1	GetIntSetting	COMINF-ESOCK-RConnection-PublicAPI-0032-GetIntSetting_command07
		COMMAND			connection1	Close
		ASYNC_DELAY	2000000
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0032

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0033
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0033
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetBoolSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided does not exist
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetDesSetting(aSettingName, TDes16) to retrieve the "ModemBearer/ModemInitString",
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with code=-1(KErrNotFound)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0033-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0033-Start_command06
		COMMAND	!Error=-1	connection1	GetBoolSetting	COMINF-ESOCK-RConnection-PublicAPI-0033-GetBoolSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0033

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0034
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0034
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is not TDes16
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetDesSetting(aSettingName, TDes8) to retrieve the "LANService\IfNetworks",
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call fail with appropriate error code (KErrNotSupported) as "LANService" is not a setting in active commdb
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0034-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0034-Start_command06
		COMMAND	!Error=-1	connection1	GetDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0034-GetDesSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0034

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0035
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0035
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is not TDes8
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetDesSetting to retrieve the "Location\PauseAfterDialout", which is an integer
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with appropriate error code (KErrBadName)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0035-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0035-Start_command06
		COMMAND	!Error=-28	connection1	GetDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0035-GetDesSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0035

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0036
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0036
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is not TDes8
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetDesSetting to retrieve the "Location\Mobile", which is a boolean
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with appropriate error code (KErrBadName)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0036-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0036-Start_command06
		COMMAND	!Error=-28	connection1	GetDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0036-GetDesSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0036

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0037
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0037
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetLongDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is not TDes8
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetLongDesSetting to retrieve the "LANService\IfNetworks", which is TDes8
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with appropriate error code (KErrNotSupported) as "LANService" is not a setting in active commdb
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection		\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open			COMINF-ESOCK-RConnection-PublicAPI-0037-Open_command05
		COMMAND			connection1	Start			COMINF-ESOCK-RConnection-PublicAPI-0037-Start_command06
		COMMAND	!Error=-1	connection1	GetLongDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0037-GetLongDesSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0037

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0038
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0038
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetLongDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is not TDes8
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetLongDesSetting to retrieve the "IAP\id", which is TInt
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with appropriate error code (KErrBadName)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection		\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open			COMINF-ESOCK-RConnection-PublicAPI-0038-Open_command05
		COMMAND			connection1	Start			COMINF-ESOCK-RConnection-PublicAPI-0038-Start_command06
		COMMAND	!Error=-6	connection1	GetLongDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0038-GetLongDesSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0038

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0039
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0039
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetLongDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is not TDes8
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetLongDesSetting to retrieve the "Location\Mobile", which is a boolean
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with appropriate error code (KErrBadName)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection		\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open			COMINF-ESOCK-RConnection-PublicAPI-0039-Open_command05
		COMMAND			connection1	Start			COMINF-ESOCK-RConnection-PublicAPI-0039-Start_command06
		COMMAND	!Error=-28	connection1	GetLongDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0039-GetLongDesSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0039

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0040
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0040
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetLongDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is not TDes8
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetLongDesSetting to retrieve the "Location\Name", which is a TDes8
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with appropriate error code (KErrBadName)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0040-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0040-Start_command06
		COMMAND	!Error=-28	connection1	GetIntSetting	COMINF-ESOCK-RConnection-PublicAPI-0040-GetIntSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0040

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0041
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0041
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetIntSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is not TDes8
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetLongDesSetting to retrieve the "LANService\IfNetworks", which is a TDes8
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with appropriate error code (KErrNotSupported) as "LANService" is not a setting in active commdb
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0041-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0041-Start_command06
		COMMAND	!Error=-1	connection1	GetIntSetting	COMINF-ESOCK-RConnection-PublicAPI-0041-GetIntSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0041

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0042
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0042
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetBoolSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is not TDes8
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetLongDesSetting to retrieve the "Location\Name", which is a TDes8
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with appropriate error code (KErrBadName)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0042-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0042-Start_command06
		COMMAND	!Error=-28	connection1	GetBoolSetting	COMINF-ESOCK-RConnection-PublicAPI-0042-GetBoolSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0042

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0043
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0043
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetBoolSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is not TDes8
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetLongDesSetting to retrieve the "LANService\IfNetworks", which is a TDes8
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with appropriate error code (KErrNotSupported) as "LANService" is not a setting in active commdb
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0043-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0043-Start_command06
		COMMAND	!Error=-1	connection1	GetBoolSetting	COMINF-ESOCK-RConnection-PublicAPI-0043-GetBoolSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0043

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0044
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0044
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::EnumerateConnections
//! @SYMTestCaseDesc		Verify the currently active interfaces can be enumerated
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Enumerate the connection.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The number of currently active interfaces (1) is successfully enumerated.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0044-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0044-Start_command06
		COMMAND		connection1	EnumerateConnections
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0044

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0045
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0045
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::EnumerateConnections
//! @SYMTestCaseDesc		Verify EnumerateConnections works as specified by varying the number of active interfaces
//! @SYMTestActions		Instantiate and connect an RSocketServ instance
//!				Instantiate, open and start two RConnections (rconn1, rconn2)
//!				Call EnumerateConnections and ensure aCount=0
//!				Start rconn1
//!				Call EnumerateConnections and ensure aCount=1
//!				Start rconn2
//!				Call EnumerateConnections and ensure aCount=1
//!				Stop rconn1
//!				Call EnumerateConnections and ensure aCount=0
//!				Close rconn2
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Calls should return the number of active connections correctly
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		CREATE_OBJECT	RConnection	connection2
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0045-Open_command05
		COMMAND		connection1	EnumerateConnections
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0045-Start_command07
		COMMAND		connection1	EnumerateConnections
		COMMAND		connection2	Constructor
		COMMAND		connection2	Open		COMINF-ESOCK-RConnection-PublicAPI-0045-Open_command11
		COMMAND		connection2	Start		COMINF-ESOCK-RConnection-PublicAPI-0045-Start_command12
		COMMAND		connection2	EnumerateConnections
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		connection2	EnumerateConnections
		COMMAND		connection2	Close
		COMMAND		connection2	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0045

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0046
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0046
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetIntSetting
//! @SYMTestCaseDesc		Verify GetIntSetting fails if the connection is not started
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Call GetIntSetting to retreive Location\PauseAfterDialout
//!				Close the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with KErrNotReady
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0046-Open_command05
		COMMAND	!Error=-18	connection1	GetIntSetting		COMINF-ESOCK-RConnection-PublicAPI-0046-GetIntSetting_command06
		COMMAND			connection1	Close
		COMMAND			connection1	~
		ASYNC_DELAY	2000000
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0046

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0047
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0047
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetBoolSetting
//! @SYMTestCaseDesc		Verify GetBoolSetting fails if the connection is not started
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Call GetBoolSetting to retreive Location\Mobile
//!				Close the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with KErrNotReady
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0047-Open_command05
		COMMAND	!Error=-18	connection1	GetBoolSetting	COMINF-ESOCK-RConnection-PublicAPI-0047-GetBoolSetting_command06
		COMMAND			connection1	Close
		COMMAND			connection1	~
		ASYNC_DELAY	2000000
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0047

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0048
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0048
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetDesSetting
//! @SYMTestCaseDesc		Verify GetDesSetting fails if the connection is not started
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Call GetDesSetting to retreive Location\Name
//!				Close the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with KErrNotReady
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0048-Open_command05
		COMMAND	!Error=-18	connection1	GetDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0048-GetDesSetting_command06
		COMMAND			connection1	Close
		COMMAND			connection1	~
		ASYNC_DELAY	2000000
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0048

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0049
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0049
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetLongDesSetting
//! @SYMTestCaseDesc		Verify GetLongDesSetting fails if the connection is not started
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Call GetLongDesSetting to retreive Location\Name
//!				Close the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with KErrNotReady
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection		\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open			COMINF-ESOCK-RConnection-PublicAPI-0049-Open_command05
		COMMAND	!Error=-18	connection1	GetLongDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0049-GetLongDesSetting_command06
		COMMAND			connection1	Close
		COMMAND			connection1	~
		ASYNC_DELAY	2000000
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0049

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0050
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0050
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetConnectionInfo
//! @SYMTestCaseDesc		Verify the connection info can be retrieved for the currently active connection
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Enumerate the connection.
//!				GetConnectionInfo for the connection.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The connection info is retrieved succesfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0050-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0050-Start_command06
		COMMAND		connection1	EnumerateConnections
		COMMAND		connection1	GetConnectionInfo		COMINF-ESOCK-RConnection-PublicAPI-0050-GetConnectionInfo_command08
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0050

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0051
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0051
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetConnectionInfo()
//! @SYMTestCaseDesc		Verify that GetConnectionInfo() fails if aIndex is < 1 or > aCount returned from
//!				EnumerateConnections
//! @SYMTestActions		Instantiate and connect an RSocketServ instance
//!				Open and start an instance of RConnection providing the RSocketServ instance
//!				Enumerate the connection to ensurethat there is just one active interface
//!				Call RConnection::GetConnectionInfo() by passing aIndex = 0
//!				Close the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The call should fail with error KErrArgument
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection		\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open			COMINF-ESOCK-RConnection-PublicAPI-0051-Open_command05
		COMMAND			connection1	Start			COMINF-ESOCK-RConnection-PublicAPI-0051-Start_command06
		COMMAND			connection1	EnumerateConnections
		COMMAND	!Error=-6	connection1	GetConnectionInfo	COMINF-ESOCK-RConnection-PublicAPI-0051-GetConnectionInfo_command08
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0051

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0052
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0052
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetConnectionInfo()
//! @SYMTestCaseDesc		Verify that GetConnectionInfo() fails if aIndex is < 1 or > aCount returned from
//!				EnumerateConnections
//! @SYMTestActions		Instantiate and connect an RSocketServ instance
//!				Open and start an instance of RConnection providing the RSocketServ instance
//!				Enumerate the connection to ensure that there is just one active interface
//!				Call RConnection::GetConnectionInfo() by passing aIndex = 2
//!				Close the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The call should fail with error KErrNotFound
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection		\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open			COMINF-ESOCK-RConnection-PublicAPI-0052-Open_command05
		COMMAND			connection1	Start			COMINF-ESOCK-RConnection-PublicAPI-0052-Start_command06
		COMMAND			connection1	EnumerateConnections
		COMMAND	!Error=-1	connection1	GetConnectionInfo	COMINF-ESOCK-RConnection-PublicAPI-0052-GetConnectionInfo_command08
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0052

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0053
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0053
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetConnectionInfo()
//! @SYMTestCaseDesc		Verify GetConnectionInfo() does not actually gather and return latest
//!				connection information, but returns only what is gathered by EnumerateConnections()
//! @SYMTestActions		Instantiate and connect an RSocketServ instance
//!				Open and start an instance of RConnection (rconn1) providing the RSocketServ instance
//!				Start rconn1
//!				Enumerate the connection to ensure that there is one active interface
//!				Stop the rconn1
//!				Call RConnection::GetConnectionInfo() by passing aIndex = 1
//!				Close rconn1
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The call should pass and use the stored value from EnumerateConnection
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection		\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open			COMINF-ESOCK-RConnection-PublicAPI-0053-Open_command05
		COMMAND		connection1	Start			COMINF-ESOCK-RConnection-PublicAPI-0053-Start_command06
		COMMAND		connection1	EnumerateConnections
		COMMAND		connection1	Stop
		COMMAND		connection1	GetConnectionInfo	COMINF-ESOCK-RConnection-PublicAPI-0053-GetConnectionInfo_command09
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0053

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0054
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0054
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::AllInterfaceNotification
//! @SYMTestCaseDesc		Verify the change notification for all interfaces can be requested asynchronously
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an RConnection providing the RSocketServ.
//!				Open a second RConnection providing the RSocketServ.
//!				Call AllInterfaceNotification asynchronously passing the second RConnection.
//!				Start the first RConnection synchronously.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	When the connection first connection goes up the asynchronous request should complete successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RSocketServ	socketServ2
		CREATE_OBJECT	RConnection	connection1
		CREATE_OBJECT	RConnection	connection2
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		socketServ2	Constructor
		COMMAND		socketServ2	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0054-Open_command08
		COMMAND		connection2	Constructor
		COMMAND		connection2	Open		COMINF-ESOCK-RConnection-PublicAPI-0054-Open_command11
		COMMAND		connection2	AllInterfaceNotification		COMINF-ESOCK-RConnection-PublicAPI-0054-AllInterfaceNotification_command12
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0054-Start_command14
		OUTSTANDING	
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		connection2	Close
		COMMAND		connection2	~
		ASYNC_DELAY	2000000
		COMMAND		socketServ1	~
		COMMAND		socketServ2	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0054

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0055
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0055
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::CancelAllInterfaceNotification
//! @SYMTestCaseDesc		Verify the asynchronous change notification for all interfaces can be cancelled
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an RConnection providing the RSocketServ.
//!				Open a second RConnection providing the RSocketServ.
//!				Call AllInterfaceNotification asynchronously passing the second RConnection.
//!				Cancel the asynchronous request.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The asynchronous request is cancelled successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		CREATE_OBJECT		RConnection	connection2
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0055-Open_command05
		COMMAND			connection2	Constructor
		COMMAND			connection2	Open		COMINF-ESOCK-RConnection-PublicAPI-0055-Open_command08
		COMMAND	!AsyncError=-3	connection2	AllInterfaceNotification		COMINF-ESOCK-RConnection-PublicAPI-0055-AllInterfaceNotification_command09
		COMMAND			connection2	CancelAllInterfaceNotification
		OUTSTANDING	
		COMMAND			connection2	Close
		COMMAND			connection2	~
		ASYNC_DELAY	2000000
		COMMAND			connection1	Close
		COMMAND			connection1	~
		ASYNC_DELAY	2000000
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0055

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0056
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0056
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::CancelAllInterfaceNotification
//! @SYMTestCaseDesc		Verify CancelAllInterfaceNotification does not affect the RConnection if there is no
//!				outstanding AllInterfaceNotification request
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an RConnection providing the RSocketServ.
//!				Call CancelAllInterfaceNotification
//!				Call AllInterfaceNotification
//!				Call CancelAllInterfaceNotification
//!				Close the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The asynchronous request is cancelled successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0056-Open_command05
		COMMAND			connection1	CancelAllInterfaceNotification
		COMMAND	!AsyncError=-3	connection1	AllInterfaceNotification		COMINF-ESOCK-RConnection-PublicAPI-0056-AllInterfaceNotification_command07
		COMMAND			connection1	CancelAllInterfaceNotification
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0056-Start_command09
		OUTSTANDING	
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0056

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0057
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0057
//! @SYMAuthor			James Virdee
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Attach
//! @SYMTestCaseDesc		Ensure a connection can be attached to an existing one (EAttachTypeNormal and EAttachTypeMonitor)
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Attach a second connection to this one (using EAttachTypeNormal)
//!				Ensure both connections have the same IAP.
//!				Close both connections.
//!				Open an instance of RConnection again providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Attach a second connection to this one (using EAttachTypeMonitor)
//!				Ensure both connections have the same IAP.
//!				Close both connections.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	In both EAttachTypeNormal and EAttachTypeMonitor modes the second connection can be attached successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		CREATE_OBJECT	RConnection	connection2
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0057-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0057-Start_command06
		COMMAND		connection1	EnumerateConnections
		COMMAND		connection2	Constructor
		COMMAND		connection2	Open		COMINF-ESOCK-RConnection-PublicAPI-0057-Open_command10
		COMMAND		connection2	Attach		COMINF-ESOCK-RConnection-PublicAPI-0057-Attach_command11
		COMMAND		connection2	EnumerateConnections
		COMMAND		connection2	GetConnectionInfo		COMINF-ESOCK-RConnection-PublicAPI-0057-GetConnectionInfo_command13
		COMMAND		connection2	Close
		COMMAND		connection1	Stop
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0057-Open_command17
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0057-Start_command18
		COMMAND		connection1	EnumerateConnections
		COMMAND		connection2	Open		COMINF-ESOCK-RConnection-PublicAPI-0057-Open_command21
		COMMAND		connection2	Attach		COMINF-ESOCK-RConnection-PublicAPI-0057-Attach_command22
		COMMAND		connection2	EnumerateConnections
		COMMAND		connection2	GetConnectionInfo		COMINF-ESOCK-RConnection-PublicAPI-0057-GetConnectionInfo_command24
		COMMAND		connection2	Close
		COMMAND		connection2	~
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0057


//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0059
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0059
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Start
//! @SYMTestCaseDesc		Verify synchronous Start fails if the RConnection is not opened
//! @SYMTestActions		Instantiate and connect an RSocketServ object
//!				Instantiate and start a RConnection object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Start should panic with KERN-EXEC Code =0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0059-Start_command05
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0059

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0060
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0060
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Start
//! @SYMTestCaseDesc		Verify synchronous Start with overrides fails if the RConnection is not opened
//! @SYMTestActions		Instantiate and connect an
//!				RSocketServ object
//!				Instantiate and start a RConnection object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Start should panic with KERN-EXEC Code = 0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0060-Start_command05
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0060

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0061
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0061
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Start
//! @SYMTestCaseDesc		Verify asynchronous Start fails if the RConnection is not opened
//! @SYMTestActions		Instantiate and connect an
//!				RSocketServ object
//!				Instantiate and start a RConnection object asynchronously
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Start should panic with KERN-EXEC Code = 0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0061-Start_command05
//!		OUTSTANDING	
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0061

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0062
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0062
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Start
//! @SYMTestCaseDesc		Verify asynchronous Start with overrides fails if the RConnection is not opened
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate and start a RConnection object asynchronously
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Start should panic with KERN-EXEC Code = 0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0062-Start_command05
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0062

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0063
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0063
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		03/04/2006
//! @SYMAPI			RConnection::Close,
//! @SYMTestCaseDesc		Verify a Rconnection can be closed if it is not opened
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate an RConnection object
//!				Close the RConnection object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call completes successfully without affecting the Rconnection
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Close
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0063-Open_command06
		COMMAND		connection1	Close
		COMMAND		connection1	~
		ASYNC_DELAY	2000000
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0063

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0064
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0064
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		03/04/2006
//! @SYMAPI			RConnection::Close,
//! @SYMTestCaseDesc		Verify an Rconnection can be closed if it is not started first
//! @SYMTestActions		Instantiate and connect an RSocketServ object
//!				Instantiate and open an RConnection object
//!				Close the RConnection object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call completes successfully without affecting the Rconnection
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0064-Open_command05
		COMMAND		connection1	Close
		COMMAND		connection1	~
		ASYNC_DELAY	2000000
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0064

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0065
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0065
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		03/04/2006
//! @SYMAPI			RConnection::Stop
//! @SYMTestCaseDesc		Ensure Stop fails if called on a RConnection which is not opened
//! @SYMTestActions		Instantiate and connect an
//!				RSocketServ object
//!				Instantiate an RConnection object
//!				Stop the RConnection object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	Stop
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0065

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0066
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0066
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		03/04/2006
//! @SYMAPI			RConnection::Stop
//! @SYMTestCaseDesc		Ensure Stop fails if called on a RConnection which is not started
//! @SYMTestActions		Instantiate and connect an RSocketServ object
//!				Instantiate and open an RConnection object
//!				Stop the RConnection object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0066-Open_command05
		COMMAND	!Error=-18	connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0066

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0067
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0067
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		03/04/2006
//! @SYMAPI			RConnection::Stop
//! @SYMTestCaseDesc		Ensure Stop(EStopNormal) fails if called on a RConnection which is not opened
//! @SYMTestActions		Instantiate and connect an RSocketServ object
//!				Instantiate an RConnection object
//!				Stop the RConnection object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	Stop		COMINF-ESOCK-RConnection-PublicAPI-0067-Stop_command05
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0067

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0068
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0068
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		03/04/2006
//! @SYMAPI			RConnection::Stop
//! @SYMTestCaseDesc		Ensure Stop(EStopNormal) fails if called on a RConnection which is not started
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate and open an RConnection object
//!				Stop the RConnection object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0068-Open_command05
		COMMAND	!Error=-18	connection1	Stop		COMINF-ESOCK-RConnection-PublicAPI-0068-Stop_command06
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0068

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0069
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0069
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		03/04/2006
//! @SYMAPI			RConnection::Stop
//! @SYMTestCaseDesc		Ensure Stop(EStopAuthoritative) fails if called on a RConnection which is not open
//! @SYMTestActions		Instantiate and connect an RSocketServ object
//!				Instantiate an RConnection object
//!				Stop the RConnection object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	Stop		COMINF-ESOCK-RConnection-PublicAPI-0069-Stop_command05
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0069

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0070
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0070
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		03/04/2006
//! @SYMAPI			RConnection::Stop
//! @SYMTestCaseDesc		Ensure Stop(EStopAuthoritative) fails if called on a RConnection which is not started
//! @SYMTestActions		Instantiate and connect an RSocketServ object
//!				Instantiate and open an RConnection object
//!				Stop the RConnection object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call fails with KErrNotReady
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0070-Open_command05
		COMMAND	!Error=-18	connection1	Stop		COMINF-ESOCK-RConnection-PublicAPI-0070-Stop_command06
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0070

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0071
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0071
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::ProgressNotification
//! @SYMTestCaseDesc		Verify ProgressNotification fails if the connection is not open
//! @SYMTestActions		Instantiate and connect an RSocketServ object
//!				Instantiate an RConnection object
//!				Call ProgressNotification
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	ProgressNotification
//!		OUTSTANDING	
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0071

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0072
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0072
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::CancelProgressNotification
//! @SYMTestCaseDesc		Verify that if CancelProgressNotification is called
//!				without starting the connection, the connection is not affected
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate and open an RConnection object
//!				Call CancelProgressNotification
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call completes without affecting the connection
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0072-Open_command05
		COMMAND		connection1	CancelProgressNotification
		COMMAND		connection1	ProgressNotification
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0072-Start_command08
		OUTSTANDING	
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0072

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0073
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0073
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Progress
//! @SYMTestCaseDesc		Verify progress fails if called without opening the connection
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate an RConnection object
//!				Call Progress()
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	Progress
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0073

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0074
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0074
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Progress
//! @SYMTestCaseDesc		Verify progress is initialised correctly when the RConnection is opened
//! @SYMTestActions		Instantiate and connect an RSocketServ object
//!				Instantiate and open an RConnection object
//!				Call Progress()
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call succeeds with error =0 and stage = 0
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0074-Open_command05
		COMMAND		connection1	Progress
		COMMAND		connection1	Close
		COMMAND		connection1	~
		ASYNC_DELAY	2000000
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0074

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0075
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0075
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Progress
//! @SYMTestCaseDesc		Verify progress fails if called after closing the connection
//! @SYMTestActions		Instantiate and connect an RSocketServ object
//!				Instantiate and open an RConnection object
//!				Start the RConnection synchronously
//!				Close
//!				Call Progress()
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0075-Open_command05
//!		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0075-Start_command06
//!		COMMAND		connection1	Close
//!		COMMAND		connection1	Progress
//!		ASYNC_DELAY	2000000
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0075

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0076
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0076
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::LastProgressError
//! @SYMTestCaseDesc		Verify LastProgressError fails if called without opening the connection
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate an RConnection object
//!				Call LastProgressError
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	LastProgressError		COMINF-ESOCK-RConnection-PublicAPI-0076-LastProgressError_command05
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0076

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0077
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0077
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::LastProgressError
//! @SYMTestCaseDesc		Verify LastProgressError completes successfully if called without starting the connection
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate and open an RConnection object
//!				Call LastProgressError
//!				Close the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call completes with KErrNone
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0077-Open_command05
		COMMAND		connection1	LastProgressError		COMINF-ESOCK-RConnection-PublicAPI-0077-LastProgressError_command06
		COMMAND		connection1	Close
		COMMAND		connection1	~
		ASYNC_DELAY	2000000
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0077

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0078
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0078
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::ServiceChangeNotification
//! @SYMTestCaseDesc		Verify ServiceChangeNotification fails if called without opening the connection
//! @SYMTestActions		Instantiate and connect an RSocketServ object
//!				Instantiate an RConnection object
//!				Call ServiceChangeNotification
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	ServiceChangeNotification		COMINF-ESOCK-RConnection-PublicAPI-0078-ServiceChangeNotification_command05
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0078

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0079
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0079
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::ServiceChangeNotification
//! @SYMTestCaseDesc		Verify ServiceChangeNotifiaction passes if called without starting the connection
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate and open an RConnection object
//!				Call ServiceChangeNotification
//!				Stop the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call completes with KErrCancel
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0079-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0079-Start_command06
		COMMAND	!AsyncError=-3	connection1	ServiceChangeNotification		COMINF-ESOCK-RConnection-PublicAPI-0079-ServiceChangeNotification_command07
		COMMAND			connection1	Stop
		OUTSTANDING	
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0079

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0080
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0080
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::CancelServiceChangeNotification
//! @SYMTestCaseDesc		Verify CancelServiceChangeNotification causes a panic if called without opening the connection
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate an RConnection object
//!				Call CancelServiceChangeNotification
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	CancelServiceChangeNotification
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0080

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0081
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0081
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::CancelServiceChangeNotification
//! @SYMTestCaseDesc		Verify CancelServiceChangeNotifiaction has no effect if called without starting the connection
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate and open an RConnection object
//!				Call CancelServiceChangeNotification
//!				Close the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call completes and does not affect the connection
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0081-Open_command05
		COMMAND		connection1	CancelServiceChangeNotification
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0081-Start_command07
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0081

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0082
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0082
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::CancelServiceChangeNotification
//! @SYMTestCaseDesc		Verify CancelServiceChangeNotifiaction has no effect if called
//!				when there is no outstanding ServiceChangeNotification request
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate and open an RConnection object
//!				Start the RConnection
//!				Call CancelServiceChangeNotification
//!				Close the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call completes and does not affect the connection
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0082-Open_command05
		COMMAND		connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0082-Start_command06
		COMMAND		connection1	CancelServiceChangeNotification
		COMMAND		connection1	Stop
		COMMAND		connection1	~
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0082

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0083
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0083
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Name
//! @SYMTestCaseDesc		Verify Name fails if called without opening the connection
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate an RConnection object
//!				Call Name
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	Name
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0083

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0084
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0084
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Name
//! @SYMTestCaseDesc		Verify Name succeeds if called without starting the connection
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate and open an RConnection object
//!				Call Name
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call returns with KErrNone
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0084-Open_command05
		COMMAND		connection1	Name
		COMMAND		connection1	Close
		COMMAND		connection1	~
		ASYNC_DELAY	2000000
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0084

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0085
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0085
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Name
//! @SYMTestCaseDesc		Verify Name returns a unique "name" for every RConnection
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate and open an RConnection object
//!				Call Name
//!				Instantiate and open an RConnection object
//!				Call Name
//!				Close both RConnections
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Both calls complete with KErrNone and return different "names"
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		CREATE_OBJECT	RConnection	connection2
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0085-Open_command05
		COMMAND		connection1	Name
		COMMAND		connection2	Constructor
		COMMAND		connection2	Open		COMINF-ESOCK-RConnection-PublicAPI-0085-Open_command09
		COMMAND		connection2	Name
		COMMAND		connection1	Close
		COMMAND		connection1	~
		ASYNC_DELAY	2000000
		COMMAND		connection2	Close
		COMMAND		connection2	~
		ASYNC_DELAY	2000000
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0085

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0086
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0086
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::EnumerateConnections
//! @SYMTestCaseDesc		Verify EnumerateConnections fails if the connection is not opened
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate an RConnection object
//!				Call EnumerateConnections
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	EnumerateConnections
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0086

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0087
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0087
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::Name
//! @SYMTestCaseDesc		Verify EnumerateConnections succeeds if called without starting the connection
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate and open an RConnection object
//!				Call EnumerateConnections
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call returns with KErrNone, aCount = 0
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	socketServ1
		CREATE_OBJECT	RConnection	connection1
		COMMAND		socketServ1	Constructor
		COMMAND		socketServ1	Connect
		COMMAND		connection1	Constructor
		COMMAND		connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0087-Open_command05
		COMMAND		connection1	EnumerateConnections
		COMMAND		connection1	Close
		COMMAND		connection1	~
		ASYNC_DELAY	2000000
		COMMAND		socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0087

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0088
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0088
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetConnectionInfo()
//! @SYMTestCaseDesc		Veirify GetConnectionInfo fails if the connection is not opened
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate an RConnection object
//!				Call GetConnectionInfo
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	GetConnectionInfo		COMINF-ESOCK-RConnection-PublicAPI-0088-GetConnectionInfo_command05
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0088

//!START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0089
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0089
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::AllInterfaceNotification
//! @SYMTestCaseDesc		Verify AllInterfaceNotification() fails if the connection is not opened
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate an RConnection object
//!				Call AllInterfaceNotification
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//!		CREATE_OBJECT	RSocketServ	socketServ1
//!		CREATE_OBJECT	RConnection	connection1
//!		COMMAND		socketServ1	Constructor
//!		COMMAND		socketServ1	Connect
//!		COMMAND		connection1	Constructor
//!		COMMAND		connection1	AllInterfaceNotification		COMINF-ESOCK-RConnection-PublicAPI-0089-AllInterfaceNotification_command05
//!		COMMAND		connection1	~
//!		COMMAND		socketServ1	~		
//!	END_TEST_BLOCK	!PanicCode=0
//!END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0089

//! START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0090
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0090
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::CancelAllInterfaceNotification
//! @SYMTestCaseDesc		Verify CancelAllInterfaceNotification fails if the connection is not opened
//! @SYMTestActions		Instantiate and connect a RSocketServ object
//!				Instantiate an RConnection object
//!				Call CancelAllInterfaceNotification
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call panics with KERN-EXEC code=0
//! @SYMTestType		CIT
//! 	START_TEST_BLOCK	100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
//! 		CREATE_OBJECT	RSocketServ	socketServ1
//! 		CREATE_OBJECT	RConnection	connection1
//! 		COMMAND		socketServ1	Constructor
//! 		COMMAND		socketServ1	Connect
//! 		COMMAND		connection1	Constructor
//! 		COMMAND		connection1	CancelAllInterfaceNotification
//! 		COMMAND		connection1	~
//! 		COMMAND		socketServ1	~		
//! 	END_TEST_BLOCK	!PanicCode=0
//! END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0090

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0091
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0091
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::ServiceChangeNotification
//! @SYMTestCaseDesc		Verify ServiceChangeNotification fails if the connection is stopped before the request completes
//! @SYMTestActions		Connect an RSocketServ.
//!				Open a RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use the RConnection to asynchronously request servicechangenotification.
//!				Stop the connection before the request completes
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with KErrCancel
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0091-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0091-Start_command06
		OUTSTANDING	
		COMMAND	!AsyncError=-3	connection1	ServiceChangeNotification		COMINF-ESOCK-RConnection-PublicAPI-0091-ServiceChangeNotification_command08
		COMMAND			connection1	Stop
		OUTSTANDING	
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0091

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0092
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0092
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::AllInterfaceNotification
//! @SYMTestCaseDesc		Verify AllInterfaceNotification fails if the connection is stopped before the request completes
//! @SYMTestActions		Connect an RSocketServ.
//!				Open a RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use the RConnection to asynchronously request allinterfacenotification.
//!				Stop the connection before the request completes
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with KErrInUse
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0092-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0092-Start_command06
		COMMAND	!AsyncError=-14	connection1	AllInterfaceNotification		COMINF-ESOCK-RConnection-PublicAPI-0092-AllInterfaceNotification_command07
		COMMAND			connection1	Stop
		OUTSTANDING	
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0092

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0093
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0093
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the aSettingName provided is does not exist
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetDesSetting(aSettingName, TDes8) to retrieve some garbage setting
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with code=-1 (KErrNotFound)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0093-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0093-Start_command06
		COMMAND	!Error=-1	connection1	GetDesSetting		COMINF-ESOCK-RConnection-PublicAPI-0093-GetDesSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0093

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0094
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0094
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the
//!				aSettingName provided is not TDes8
//! @SYMTestActions		Connect an RSocketServ
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetDesSetting(aSettingName, TDes8) to retrieve the "ModemBearer\Parity",
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with appropriate error code (KErrBadName)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0094-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0094-Start_command06
		COMMAND	!Error=-28	connection1	GetDesSetting		COMINF-ESOCK-RConnection-PublicAPI-0094-GetDesSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0094

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0095
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0095
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the aSettingName provided is not TDes8
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetDesSetting to retrieve the "Location\PauseAfterDialout", which is an integer
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with appropriate error code (KErrBadName)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0095-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0095-Start_command06
		COMMAND	!Error=-28	connection1	GetDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0095-GetDesSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0095

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0096
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0096
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetDesSetting
//! @SYMTestCaseDesc		Verify that an appropriate error code is returned if the aSettingName provided is not TDes8
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Start the RConnection synchronously.
//!				Use GetDesSetting to retrieve the "Location\Mobile", which is a boolean
//!				Close the RConnection and RSocketServ instances
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with appropriate error code (KErrBadName)
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0096-Open_command05
		COMMAND			connection1	Start		COMINF-ESOCK-RConnection-PublicAPI-0096-Start_command06
		COMMAND	!Error=-28	connection1	GetDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0096-GetDesSetting_command07
		COMMAND			connection1	Stop
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0096

START_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0097
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-PublicAPI-0097
//! @SYMAuthor			Kavita Gupta
//! @SYMCreationDate		17/03/2006
//! @SYMAPI			RConnection::GetDesSetting
//! @SYMTestCaseDesc		Verify GetDesSetting fails if the connection is not started
//! @SYMTestActions		Connect an RSocketServ.
//!				Open an instance of RConnection providing the RSocketServ.
//!				Call GetDesSetting to retreive LANService\IfNetworks
//!				Close the RConnection
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Call should fail with KErrNotReady
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_RConnection	\comms-infras\esock\T_RConnection\COMINF-ESOCK-RConnection-PublicAPI.ini 
		CREATE_OBJECT		RSocketServ	socketServ1
		CREATE_OBJECT		RConnection	connection1
		COMMAND			socketServ1	Constructor
		COMMAND			socketServ1	Connect
		COMMAND			connection1	Constructor
		COMMAND			connection1	Open		COMINF-ESOCK-RConnection-PublicAPI-0097-Open_command05
		COMMAND	!Error=-18	connection1	GetDesSetting	COMINF-ESOCK-RConnection-PublicAPI-0097-GetDesSetting_command06
		COMMAND			connection1	Close
		ASYNC_DELAY	2000000
		COMMAND			connection1	~
		COMMAND			socketServ1	~		
	END_TEST_BLOCK	
END_TESTCASE			COMINF-ESOCK-RConnection-PublicAPI-0097
