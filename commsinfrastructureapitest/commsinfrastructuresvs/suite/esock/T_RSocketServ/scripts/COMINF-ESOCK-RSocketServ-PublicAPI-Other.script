//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @file
//! @SYMTestSuiteName		COMINF-ESOCK-RSocketServ-PublicAPI-Other
//! @SYMScriptTestEnvironment	This test script requires a basic ROM.
//! @SYMScriptDescription	Tests all public elements of the RSocketServ class
//!				as a means of confidence that the APIs work as expected.
//! @SYMScriptPurpose		The purpose is to provide a regression test suite of Published All APIs for 
//!				the RSocketServ class.
//! @SYMScriptInfo		Negative testing is performed to confirm that correct errors are returned 
//!				when incorrect parameters are given.
//! @SYMScriptAutomation	The tests are fully automated using Test Execute Framework and Test Driver.
//! @SYMScriptAuthor		James Mechen, Victor Shamarin
//! @SYMScriptCreationDate	12/12/2006
///////////////////////////////////////////////////////////////////////////////


LOAD_SUITE	T_RSocketServ
DELAY		2000


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0001
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0001
//! @SYMAPI			RSocketServ
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		19/02/2007
//! @SYMTestCaseDesc		Construct and destruct a socket server.
//!				Uses API elements: RSocketServ(),
//!				                   ~RSocketServ()
//! @SYMTestActions    		1. Construct socket server.
//!				2. Destruct socket server.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Socket server is constructed and destructed with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0001


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0002
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0002
//! @SYMAPI			RSocketServ
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		19/02/2007
//! @SYMTestCaseDesc		Open session to socket server and close it again.
//!				Uses API elements: Connect(TUint),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Close the session.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Session to socket server is successfully opened/closed with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0002


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0005
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0005
//! @SYMAPI			RSocketServ
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		19/02/2007
//! @SYMTestCaseDesc		Get the version number of the client.
//!				Uses API elements: Connect(),
//!						   Version()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Get the version number of this client.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Version number successfully returned with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketServActive	Version
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0005


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0006
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0006
//! @SYMAPI			RSocketServ
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		19/02/2007
//! @SYMTestCaseDesc		Get number of protocols the socket server is aware of.
//!				Uses API elements: Connect(),
//!						   NumProtocols()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Get the number of protocols the socket server is aware of.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Number of protocols successfully returned with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketServActive	NumProtocols
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0006


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0007
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0007
//! @SYMAPI			RSocketServ
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		27/09/2006
//! @SYMTestCaseDesc		Get information about every protocol.
//!				Uses API elements: Connect(),
//!						   NumProtocols(),
//!				                   GetProtocolInfo()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Get the number of protocols the socket server is aware of.
//!				3. Get information about every protocol.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Protocol information successfully returned with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketServActive	NumProtocols
		COMMAND		RSocketServActive	GetProtocolInfo
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0007


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0010
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0010
//! @SYMAPI			RSocketServ
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		27/09/2006
//! @SYMTestCaseDesc		Set and clear socket server exclusive session.
//!				Uses API elements: SetExclusiveMode(),
//!				                   ClearExclusiveMode()
//! @SYMTestActions    		1. Set this session as the socket server exclusive session.
//!				2. Clear exclusive mode for this session.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Exclusive mode is set and unset successfully with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketServActive	SetExclusiveMode
		OUTSTANDING	
		COMMAND		RSocketServActive	ClearExclusiveMode
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0010


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0011
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0011
//! @SYMAPI			RSocketServ
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		27/09/2006
//! @SYMTestCaseDesc		Install an Esock extension (DLL file).
//!				Uses API elements: InstallExtension()
//! @SYMTestActions    		1. Install an Esock extension.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	InstallExtension() returns KErrNotSupported (-5)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND	!Error=-5	RSocketServActive	InstallExtension		COMINF-ESOCK-RSocketServ-PublicAPI-0011-0001-InstallExtension_command03
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0011


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0028
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0028
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that gets information about protocol with wrong identifier protocol name (-2).
//!				Uses API elements: GetProtocolInfo().
//! @SYMTestActions    		1. Get information about protocol with wrong identifier a protocol name (-2).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The GetProtocolInfo() method call is with error code KErrNotFound (-1).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND	!Error=-1	RSocketServActive	GetProtocolInfo		COMINF-ESOCK-RSocketServ-PublicAPI-0028-0001-GetProtocolInfo_command03
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0028


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0029
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0029
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that gets information about protocol with wrong protocol name.
//!				Uses API elements: FindProtocol().
//! @SYMTestActions    		1. Get information about protocol with wrong a protocol name (ac).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The FindProtocol() method call is with error code KErrNotFound (-1).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND	!Error=-1	RSocketServActive	FindProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0029-0001-FindProtocol_command03
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0029


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0030
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0030
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that open session to socket server with wrong the number of message slots (-10).
//!				Uses API elements: Connect(TUint),
//!				                   Close().
//! @SYMTestActions    		1. Call Connect() method for open session to socket server with the number of message slots (-10).
//!				2. Close the session.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The Connect() method call is with error code KErrArgument (-6).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND	!Error=-6	RSocketServActive	Connect		COMINF-ESOCK-RSocketServ-PublicAPI-0030-0001-Connect_command02
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0030


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0032
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0032
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that opens session to socket server with wrong protocol (-10).
//!				Uses API elements: Connect(const TSessionPref&, TUint),
//!				                   Close()
//! @SYMTestActions    		1. Call Connect() method for open session to socket server (giving a principal usage of the connection) with wrong protocol (-10).
//!				2. Close the session.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The Connect() method call is with no error.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect		COMINF-ESOCK-RSocketServ-PublicAPI-0032-0001-Connect_command02
		OUTSTANDING	
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0032
