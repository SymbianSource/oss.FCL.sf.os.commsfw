//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @file
//! @SYMTestSuiteName		COMINF-ESOCK-RSocketServ-PublicAPI-TCP
//! @SYMScriptTestEnvironment	This test script requires a basic ROM.
//! @SYMScriptDescription	Tests all public elements of the RSocketServ class
//!				as a means of confidence that the APIs work as expected.
//! @SYMScriptPurpose		The purpose is to provide a regression test suite of Published All APIs for 
//!				the RSocketServ class.
//! @SYMScriptInfo		Negative testing is performed to confirm that correct errors are returned 
//!				when incorrect parameters are given.
//! @SYMScriptAutomation	The tests are fully automated using Test Execute Framework and Test Driver.
//! @SYMScriptAuthor		James Mechen, Victor Shamarin
//! @SYMScriptCreationDate	12/12/2006
///////////////////////////////////////////////////////////////////////////////


LOAD_SUITE	T_RSocketServ
DELAY		2000


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0003
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0003
//! @SYMAPI			RSocketServ
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		19/02/2007
//! @SYMTestCaseDesc		Open session to socket server (giving TCP as principal usage of the connection) and close it again.
//!				Uses API elements: Connect(const TSessionPref&, TUint),
//!				                   Close()
//! @SYMTestActions    		1. Open session to socket server (giving TCP as principal usage of the connection).
//!				2. Close the session.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Session to socket server is successfully opened/closed with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect		COMINF-ESOCK-RSocketServ-PublicAPI-0003-0001-Connect_command02
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0003


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0008
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0008
//! @SYMAPI			RSocketServ
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		19/02/2007
//! @SYMTestCaseDesc		Get information about the tcp protocol, identified by its name.
//!				Uses API elements: Connect(),
//!				                   FindProtocol()
//! @SYMTestActions    		1. Open session to socket server.
//!				2. Get information about the tcp protocol, identified by its name, and verify result.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Protocol information successfully returned with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketServActive	FindProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0008-0001-FindProtocol_command03
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0008


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0012
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0012
//! @SYMAPI			RSocketServ
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		19/02/2007
//! @SYMTestCaseDesc		Load and unload TCP protocol.
//!				Uses API elements: StartProtocol(),
//!				                   StopProtocol()
//! @SYMTestActions    		1. Load TCP protocol.
//!				2. Unload TCP protocol.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	TCP protocol is successfully loaded/unloaded with no errors.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0012-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND		RSocketServActive	StopProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0012-0001-StopProtocol_command05
		OUTSTANDING	
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0012


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0014
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0014
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that loads a protocol with wrong a protocol suite (-1).
//!				Uses API elements: StartProtocol().
//! @SYMTestActions    		1. Load TCP protocol with a protocol suite (-1).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StartProtocol() method call is with error code KErrBadName (-28) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND	!AsyncError=-28	RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0014-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0014


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0015
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0015
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that loads a protocol with wrong type of socket (-10).
//!				Uses API elements: StartProtocol().
//! @SYMTestActions    		1. Load TCP protocol with a type of socket (-10).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StartProtocol() method call is with error code KErrBadName (-28) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND	!AsyncError=-28	RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0015-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0015


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0016
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0016
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that loads a protocol with wrong protocol in a family (-1).
//!				Uses API elements: StartProtocol().
//! @SYMTestActions    		1. Load TCP protocol with a protocol in a family (-1).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StartProtocol() method call is with error code KErrBadName (-28) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND	!AsyncError=-28	RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0016-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0016


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0017
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0017
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that loads a protocol with wrong combination of parameters.
//!				Uses API elements: StartProtocol().
//! @SYMTestActions    		1. Load TCP protocol with wrong a combination of parameters (KAfInet, KSockDatagram, KProtocolInetTcp).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StartProtocol() method call is with error code KErrBadName (-28) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND	!AsyncError=-28	RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0017-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0017


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0018
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0018
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that loads a protocol with wrong combination of parameters.
//!				Uses API elements: StartProtocol().
//! @SYMTestActions    		1. Load TCP protocol with a combination (KAFUnspec, KSockStream, KProtocolInetTcp).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StartProtocol() method call is with error code KErrBadName (-28) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND	!AsyncError=-28	RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0018-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0018


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0019
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0019
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that loads a protocol twice for one session.
//!				Uses API elements: StartProtocol().
//! @SYMTestActions    		1. Load TCP protocol.
//!				2. Load TCP protocol with same parameters.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StartProtocol() method is called twice with no error.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect
		COMMAND		RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0019-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND		RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0019-0001-StartProtocol_command05
		OUTSTANDING	
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0019


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0020
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0020
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that unloads a protocol with wrong protocol suite (-1).
//!				Uses API elements: StartProtocol(),
//!				                   StopProtocol().
//! @SYMTestActions    		1. Load TCP protocol.
//!				2. Unload TCP protocol with a protocol suite (-1)
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StopProtocol() method call is with error code KErrBadName (-28) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0020-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND	!AsyncError=-28	RSocketServActive	StopProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0020-0001-StopProtocol_command05
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0020


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0021
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0021
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that unloads a protocol with wrong type of socket (-1).
//!				Uses API elements: StartProtocol(),
//! @SYMTestActions    		1. Load TCP protocol.
//!				2. Unload TCP protocol with a type of socket  (-1).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StopProtocol() method call is with error code KErrBadName (-28) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0021-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND			RSocketServActive	StopProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0021-0001-StopProtocol_command05
		OUTSTANDING
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0021


START_TESTCASE COMINF-ESOCK-RSocketServ-PublicAPI-0022
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0022
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that unloads a protocol with wrong protocol family (-1).
//!				Uses API elements: StartProtocol(),
//!				                   StopProtocol().
//! @SYMTestActions    		1. Load TCP protocol.
//!				2. Unload TCP protocol with a protocol in a family (-1).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StopProtocol() method call is with error code KErrBadName (-28) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0022-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND	!AsyncError=-28	RSocketServActive	StopProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0022-0001-StopProtocol_command05
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0022


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0023
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0023
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that unloads a protocol with wrong combination of parameters.
//!				Uses API elements: StartProtocol(),
//!				                   StopProtocol().
//! @SYMTestActions    		1. Load TCP protocol.
//!				2. Unload TCP protocol with wrong a combination (KAfInet, KSockDatagram, KProtocolInetTcp).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StopProtocol() method call is with error code KErrBadName (-28) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0023-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND	!AsyncError=-28	RSocketServActive	StopProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0023-0001-StopProtocol_command05
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0023


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0024
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0024
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that unloads a protocol with wrong combination of parameters.
//!				Uses API elements: StartProtocol(),
//!				                   StopProtocol().
//! @SYMTestActions    		1. Load TCP protocol.
//!				2. Unload TCP protocol with wrong a combination (KAFUnspec, KSockStream, KProtocolInetTcp).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StopProtocol() method call is with error code KErrBadName (-28) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0024-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND	!AsyncError=-28	RSocketServActive	StopProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0024-0001-StopProtocol_command05
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0024


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0025
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0025
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that unloads a protocol twice for one session.
//!				Uses API elements: StartProtocol(),
//!				                   StopProtocol().
//! @SYMTestActions    		1. Load TCP protocol.
//!				2. Unload TCP protocol.
//!				3. Unload TCP protocol.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StopProtocol() method second call is with error code KErrNotFound (-1) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0025-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND			RSocketServActive	StopProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0025-0001-StopProtocol_command05
		OUTSTANDING	
		COMMAND	!AsyncError=-1	RSocketServActive	StopProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0025-0001-StopProtocol_command07
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0025


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0026
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0026
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that unloads a protocol without loading it.
//!				Uses API elements: StopProtocol().
//! @SYMTestActions    		1. Unload TCP protocol.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StopProtocol() method call is with error code KErrNotFound (-1) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND	!AsyncError=-1	RSocketServActive	StopProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0026-0001-StopProtocol_command03
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0026


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0027
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0027
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that unloads a protocol with different parameters than used to load it.
//!				Uses API elements: StartProtocol(),
//!				                   StopProtocol().
//! @SYMTestActions    		1. Load TCP protocol with (KAfInet, KSockStream, KProtocolInetTcp).
//!				2. Unload TCP protocol with (KAfInet, KSockDatagram, KProtocolInetUdp).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The StopProtocol() method call is with error code KErrNotFound (-1) with a TRequestStatus.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND			RSocketServActive	Connect
		COMMAND			RSocketServActive	StartProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0027-0001-StartProtocol_command03
		OUTSTANDING	
		COMMAND	!AsyncError=-1	RSocketServActive	StopProtocol		COMINF-ESOCK-RSocketServ-PublicAPI-0027-0001-StopProtocol_command05
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0027


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0031
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0031
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that opens session to socket server with wrong family (-10).
//!				Uses API elements: Connect(const TSessionPref&, TUint),
//!				                   Close()
//! @SYMTestActions    		1. Call Connect() method for open session to socket server (giving a principal usage of the connection) with wrong family (-10).
//!				2. Close the session.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The Connect() method call is with no error.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND		RSocketServActive	Constructor
		COMMAND		RSocketServActive	Connect		COMINF-ESOCK-RSocketServ-PublicAPI-0031-0001-Connect_command02
		OUTSTANDING	
		COMMAND		RSocketServActive	Close
		COMMAND		RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0031


START_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0033
//! @SYMTestCaseID		COMINF-ESOCK-RSocketServ-PublicAPI-0033
//! @SYMAPI			RSocketServ
//! @SYMTestCaseDesc		A negative test that opens session to socket server with wrong number of message slots (-10).
//!				Uses API elements: Connect(const TSessionPref&, TUint),
//!				                   Close()
//! @SYMTestActions    		1. Call Connect() method for open session to socket server (giving a principal usage of the connection) with the number of message slots (-10).
//!				2. Close the session.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The Connect() method call is with error code KErrArgument (-6).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_RSocketServ	\comms-infras\esock\T_RSocketServ\COMINF-ESOCK-RSocketServ-PublicAPI.ini 
		CREATE_OBJECT	RSocketServ	RSocketServActive
		COMMAND			RSocketServActive	Constructor
		COMMAND	!Error=-6	RSocketServActive	Connect		COMINF-ESOCK-RSocketServ-PublicAPI-0033-0001-Connect_command02
		OUTSTANDING	
		COMMAND			RSocketServActive	Close
		COMMAND			RSocketServActive	~		
	END_TEST_BLOCK
END_TESTCASE 			COMINF-ESOCK-RSocketServ-PublicAPI-0033
