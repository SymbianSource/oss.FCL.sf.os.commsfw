// Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

LOAD_SUITE te_mecunittest


////////////////////////////////////////////////
// Simple API Tests
////////////////////////////////////////////////

START_TESTCASE          MEC_UNIT_TEST_001
//! @SYMTestCaseID      MEC_UNIT_TEST_001
//! @SYMTestCaseDesc 	Simple API Test, RMetaExtensionContainer::Open() and RMetaExtensionContainer::Close() with no other actions
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container
//						2) Close container
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest001
END_TESTCASE            MEC_UNIT_TEST_001


START_TESTCASE          MEC_UNIT_TEST_002
//! @SYMTestCaseID      MEC_UNIT_TEST_002
//! @SYMTestCaseDesc 	Simple API Test, RMetaExtensionContainer::AppendExtension()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container
//						2) AppendExtension T1 to container
//						3) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest002
END_TESTCASE            MEC_UNIT_TEST_002


START_TESTCASE          MEC_UNIT_TEST_003
//! @SYMTestCaseID      MEC_UNIT_TEST_003
//! @SYMTestCaseDesc 	Simple API Test, RMetaExtensionContainer::AppendExtensionL()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container
//						2) AppendExtensionL T1 to container
//						3) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest003
END_TESTCASE            MEC_UNIT_TEST_003


START_TESTCASE          MEC_UNIT_TEST_004
//! @SYMTestCaseID      MEC_UNIT_TEST_004
//! @SYMTestCaseDesc 	Simple API Test, RMetaExtensionContainer::AppendExtension() where extension has already been added
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container
//						2) AppendExtension T1 to container
//						3) AppendExtension T1 == KErrAlreadyExists
//						4) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest004
END_TESTCASE            MEC_UNIT_TEST_004


START_TESTCASE          MEC_UNIT_TEST_005
//! @SYMTestCaseID      MEC_UNIT_TEST_005
//! @SYMTestCaseDesc 	Simple API Test, RMetaExtensionContainer::FindExtension()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container
//						2) AppendExtension T1 to container
//						3) FindExtension T1 == Found
//						4) Close container
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest005
END_TESTCASE            MEC_UNIT_TEST_005


START_TESTCASE          MEC_UNIT_TEST_006
//! @SYMTestCaseID      MEC_UNIT_TEST_006
//! @SYMTestCaseDesc 	Simple API Test, RMetaExtensionContainer::FindExtensionL()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container
//						2) AppendExtension T1 to container
//						3) FindExtensionL T1 == Found
//						4) Close container
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest006
END_TESTCASE            MEC_UNIT_TEST_006


START_TESTCASE          MEC_UNIT_TEST_007
//! @SYMTestCaseID      MEC_UNIT_TEST_007
//! @SYMTestCaseDesc 	Simple API Test, RMetaExtensionContainer::FindExtension() where extension is not present
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container
//						2) AppendExtension T1 to container
//						3) FindExtension T2 == NULL
//						4) Close container
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest007
END_TESTCASE            MEC_UNIT_TEST_007


START_TESTCASE          MEC_UNIT_TEST_008
//! @SYMTestCaseID      MEC_UNIT_TEST_008
//! @SYMTestCaseDesc 	Simple API Test, RMetaExtensionContainer::FindExtensionL() where extension is not present
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container
//						2) AppendExtension T1 to container
//						3) FindExtensionL T2 == Leave KErrNotFound
//						4) Close container
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest008
END_TESTCASE            MEC_UNIT_TEST_008


START_TESTCASE          MEC_UNIT_TEST_009
//! @SYMTestCaseID      MEC_UNIT_TEST_009
//! @SYMTestCaseDesc 	Simple API Test, RMetaExtensionContainer::FindExtension() where extension is last in the list
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container
//						2) AppendExtension T1 to container
//						3) AppendExtension T2 to container
//						4) FindExtensionL T2 == Found
//						5) Close container
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest009
END_TESTCASE            MEC_UNIT_TEST_009


START_TESTCASE          MEC_UNIT_TEST_010
//! @SYMTestCaseID      MEC_UNIT_TEST_010
//! @SYMTestCaseDesc 	Simple API Test, RMetaExtensionContainer::FindExtension() where no extensions are present
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container
//						2) Find Extension T2 == NULL
//						3) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest010
END_TESTCASE            MEC_UNIT_TEST_010


START_TESTCASE          MEC_UNIT_TEST_011
//! @SYMTestCaseID      MEC_UNIT_TEST_011
//! @SYMTestCaseDesc 	Simple API Test, RMetaExtensionContainerC::FindExtension() after opening
//						against a container with extensions
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container
//						2) AppendExtension T1
//						3) Open constMec container against container
//						4) RMetaExtensionContainer::FindExtension T1 == T1
//						5) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest011
END_TESTCASE            MEC_UNIT_TEST_011


START_TESTCASE          MEC_UNIT_TEST_012
//! @SYMTestCaseID      MEC_UNIT_TEST_012
//! @SYMTestCaseDesc 	Simple API Test, RMetaExtensionContainerC::FindExtensionL() after opening
//						against a container with extensions
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container
//						2) AppendExtension T1
//						3) Open constMec container against container
//						4) RMetaExtensionContainer::FindExtensionL T1 == T1
//						5) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest012
END_TESTCASE            MEC_UNIT_TEST_012


START_TESTCASE          MEC_UNIT_TEST_013
//! @SYMTestCaseID      MEC_UNIT_TEST_013
//! @SYMTestCaseDesc    Test NULL return for RMetaExtensionContainerC::FindExtension() with un-opened container
//! @SYMFssID           COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions     1) FindExtension T1 in constMec
//! @SYMTestExpectedResults  NULL return code
RUN_TEST_STEP           60 te_mecunittest MecTest013
END_TESTCASE            MEC_UNIT_TEST_013


START_TESTCASE          MEC_UNIT_TEST_014
//! @SYMTestCaseID      MEC_UNIT_TEST_014
//! @SYMTestCaseDesc    Test KErrNotFound leave for RMetaExtensionContainerC::FindExtensionL() with un-opened container
//! @SYMFssID           COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions     1) FindExtensionL T1 in constMec
//! @SYMTestExpectedResults  Leaves with KErrNotFound
RUN_TEST_STEP           60 te_mecunittest MecTest014
END_TESTCASE            MEC_UNIT_TEST_014


////////////////////////////////////////////////
// Container Branching Tests
////////////////////////////////////////////////

START_TESTCASE          MEC_UNIT_TEST_030
//! @SYMTestCaseID      MEC_UNIT_TEST_030
//! @SYMTestCaseDesc 	Container Branching Test, Open against a base container and FindExtension() without overriding
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container rootMec
//						2) AppendExtension T1.1 to rootMec
//						3) AppendExtension T2.1 to rootMec
//						4) Open container branchMec against rootMec
//						5) Find Extension T2 == T2.1
//						6) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest030
END_TESTCASE            MEC_UNIT_TEST_030


START_TESTCASE          MEC_UNIT_TEST_031
//! @SYMTestCaseID      MEC_UNIT_TEST_031
//! @SYMTestCaseDesc 	Container Branching Test, Override extension
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container rootMec
//						2) AppendExtension T1.1 to rootMec
//						3) AppendExtension T2.1 to rootMec
//						4) Open container branchMec against rootMec
//						5) AppendExtension T1.2 to branchMec
//						6) FindExtension T1 == T1.2
//						7) FindExtension T2 == T2.1
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest031
END_TESTCASE            MEC_UNIT_TEST_031


START_TESTCASE          MEC_UNIT_TEST_032
//! @SYMTestCaseID      MEC_UNIT_TEST_032
//! @SYMTestCaseDesc 	Container Branching Test, Override all extensions and test compaction
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container rootMec
//						2) AppendExtension T1.1 to rootMec
//						3) AppendExtension T2.1 to rootMec
//						4) Open container branchMec against rootMec
//						5) AppendExtension T1.2 to branchMec
//						6) AppendExtension T2.2 to branchMec
//						7) Open container constMec against branchMec
//						8) constMec chain length == 2
//						9) Close branchMec
//						10) constMec chain length == 1
//						11) FindExtension T1 == T1.2
//						12) FindExtension T2 == T2.2
//						13) Close containers
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest032
END_TESTCASE            MEC_UNIT_TEST_032


START_TESTCASE          MEC_UNIT_TEST_033
//! @SYMTestCaseID      MEC_UNIT_TEST_033
//! @SYMTestCaseDesc 	Container Branching Test, Use RMetaExtensionContainerC after opening against
//						a branched container that adds no extensions
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container rootMec
//						2) AppendExtension T1.1 to rootMec
//						3) AppendExtension T2.1 to rootMec
//						4) Open container branchMec against rootMec
//						7) Open container constMec against branchMec
//						8) FindExtension T2 in constMec == T2
//						9) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest033
END_TESTCASE            MEC_UNIT_TEST_033


////////////////////////////////////////////////
// Container Merging Tests
////////////////////////////////////////////////


START_TESTCASE          MEC_UNIT_TEST_050
//! @SYMTestCaseID      MEC_UNIT_TEST_050
//! @SYMTestCaseDesc 	Container Merging Test, Open container and append the same container implementation twice
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container cont1
//						2) AppendExtension T1
//						3) Open constMec1 against cont1
//						4) Open constMec2 against cont1
//						5) Open container cont2
//						6) AppendContainerL constMec1
//						7) AppendContainerL constMec2 == KErrAlreadyExists
//						8) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest050
END_TESTCASE            MEC_UNIT_TEST_050


START_TESTCASE          MEC_UNIT_TEST_051
//! @SYMTestCaseID      MEC_UNIT_TEST_051
//! @SYMTestCaseDesc 	Container Merging Test, Open container and append multiple containers
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container cont1
//						2) AppendExtension T1.1 to cont1
//						3) AppendExtension T2.1 to cont1
//						4) Open container cont2
//						5) AppendExtension T3.1 to cont2
//						6) AppendExtension T2.2 to cont2
//						7) Open container mergeMec
//						8) AppendContainerL cont1 to mergeMec
//						9) AppendContainerL cont2 to mergeMec
//						10) mergeMec container count == 2
//						11) Find Extension T1 == T1.1
//						12) Find Extension T2 = T2.2
//						13) Find Extension T3 == T3.1
//						14) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest051
END_TESTCASE            MEC_UNIT_TEST_051


START_TESTCASE          MEC_UNIT_TEST_052
//! @SYMTestCaseID      MEC_UNIT_TEST_052
//! @SYMTestCaseDesc 	Container Merging Test, Open container, append multiple containers, then override extension
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container cont1
//						2) AppendExtension T1.1 to cont1
//						3) AppendExtension T2.1 to cont1
//						4) Open container cont2
//						5) AppendExtension T3.1 to cont2
//						6) AppendExtension T2.2 to cont2
//						7) Open container mergeMec
//						8) AppendContainerL cont1 to mergeMec
//						9) AppendContainerL cont2 to mergeMec
//						10) mergeMec container count == 2
//						11) AppendExtension T3.2 to mergeMec
//						12) mergeMec container count == 3
//						13) Find Extension T1 == T1.1
//						14) Find Extension T2 == T2.2
//						15) Find Extension T3 == T3.2
//						16) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest052
END_TESTCASE            MEC_UNIT_TEST_052


START_TESTCASE          MEC_UNIT_TEST_053
//! @SYMTestCaseID      MEC_UNIT_TEST_053
//! @SYMTestCaseDesc 	Container Merging Test, Open container, append container, then override extension, then append another container
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container cont1
//						2) AppendExtension T1.1 to cont1
//						3) AppendExtension T2.1 to cont1
//						4) Open container cont2
//						5) AppendExtension T3.1 to cont2
//						6) AppendExtension T2.2 to cont2
//						7) Open container mergeMec
//						8) AppendContainerL cont1 to mergeMec
//						10) mergeMec container count == 1
//						11) AppendExtension T3.2 to mergeMec
//						12) mergeMec container count == 2
//						13) AppendContainerL cont2 to mergeMec
//						14) mergeMec container count == 3
//						15) Find Extension T1 == T1.1
//						16) Find Extension T2 == T2.2
//						17) Find Extension T3 == T3.1
//						18) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest053
END_TESTCASE            MEC_UNIT_TEST_053
				

START_TESTCASE          MEC_UNIT_TEST_054
//! @SYMTestCaseID      MEC_UNIT_TEST_054
//! @SYMTestCaseDesc 	Container Merging Test, Open container, append extensions, then append a container
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container cont1
//						2) AppendExtension T1.1 to cont1
//						3) AppendExtension T2.1 to cont1
//						4) Open container mergeMec
//						5) AppendExtension T2.2 to mergeMec
//						5) AppendExtension T3.1 to mergeMec
//						8) AppendContainerL cont1 ot  to mergeMec
//						9) mergeMec container count == 2
//						11) Find Extension T1 == T1.1
//						12) Find Extension T2 == T2.1
//						13) Find Extension T3 == T3.1
//						14) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest054
END_TESTCASE            MEC_UNIT_TEST_054


START_TESTCASE          MEC_UNIT_TEST_055
//! @SYMTestCaseID      MEC_UNIT_TEST_055
//! @SYMTestCaseDesc 	Container Merging Test, Open container, append the same container twice
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open container cont1
//						2) AppendExtension T1.1 to cont1
//						3) AppendExtension T2.1 to cont1
//						4) Open container mergeMec
//						5) AppendContainerL cont1 to mergeMec
//						6) AppendContainerL cont1 to mergeMec == KErrAlreadyExists
//						7) Close
//! @SYMTestExpectedResults  KErrNone.
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_TEST_STEP 			60 te_mecunittest MecTest055
END_TESTCASE            MEC_UNIT_TEST_055



////////////////////////////////////////////////
// Panic Tests
////////////////////////////////////////////////

// REASON FOR COMMENTING - API call made "protected" before release, shouldn't be a need for it
// but in case it is changed to "public" later this is the Panic test case for it.
//START_TESTCASE          MEC_UNIT_TEST_101
//! @SYMTestCaseID      MEC_UNIT_TEST_101
//! @SYMTestCaseDesc 	Test Panic mecpanic:1 (ENoImplementation) for RMetaExtensionContainerC::Open()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open constMec with RMetaExtensionContainerC::Open()
//! @SYMTestExpectedResults  Panic mecpanic:1
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
//RUN_PANIC_STEP_RESULT 	1 mecpanic  60 te_mecunittest MecTestPanic1
//END_TESTCASE            MEC_UNIT_TEST_101


START_TESTCASE          MEC_UNIT_TEST_102
//! @SYMTestCaseID      MEC_UNIT_TEST_102
//! @SYMTestCaseDesc 	Test Panic mecpanic:2 (EInvalidSelfReference) for RMetaExtensionContainerC::Open(RMetaExtensionContainerC& aMec)
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open constMec against constMec
//! @SYMTestExpectedResults  Panic mecpanic:2
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	2 mecpanic  60 te_mecunittest MecTestPanic2
END_TESTCASE            MEC_UNIT_TEST_102


START_TESTCASE          MEC_UNIT_TEST_103
//! @SYMTestCaseID      MEC_UNIT_TEST_103
//! @SYMTestCaseDesc 	Test Panic mecpanic:1 (ENoImplementation) for RMetaExtensionContainerC::Open(RMetaExtensionContainerC& aMec)
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Open constMec against closedConstMec
//! @SYMTestExpectedResults  Panic mecpanic:1
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	1 mecpanic  60 te_mecunittest MecTestPanic3
END_TESTCASE            MEC_UNIT_TEST_103


START_TESTCASE          MEC_UNIT_TEST_104
//! @SYMTestCaseID      MEC_UNIT_TEST_104
//! @SYMTestCaseDesc 	Test Panic mecpanic:3 (EAlreadyOpen) for RMetaExtensionContainerC::Open(RMetaExtensionContainerC& aMec)
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Create container1
//						2) AppendExtension T1 to container1
//						3) Open constMec against container1
//						4) Create container2
//						5) AppendExtension T2 to container2
//						6) Open constMec against container2
//						7) Close
//! @SYMTestExpectedResults  Panic mecpanic:3
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	3 mecpanic  60 te_mecunittest MecTestPanic4
END_TESTCASE            MEC_UNIT_TEST_104


START_TESTCASE          MEC_UNIT_TEST_107
//! @SYMTestCaseID      MEC_UNIT_TEST_107
//! @SYMTestCaseDesc 	Test Panic mecpanic:3 (EAlreadyOpen) for RMetaExtensionContainer::Open()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Create container
//						2) Call RMetaExtensionContainer::Open() on container
//! @SYMTestExpectedResults  Panic mecpanic:3
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	3 mecpanic  60 te_mecunittest MecTestPanic7
END_TESTCASE            MEC_UNIT_TEST_107


START_TESTCASE          MEC_UNIT_TEST_108
//! @SYMTestCaseID      MEC_UNIT_TEST_108
//! @SYMTestCaseDesc 	Test Panic mecpanic:3 (EAlreadyOpen) for RMetaExtensionContainer::Open(RMetaExtensionContainerC& aMec)
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Create container
//						2) AppendExtension T1 to container
//						3) Create container2
//						4) Open container2 against container
//! @SYMTestExpectedResults  Panic mecpanic:3
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	3 mecpanic  60 te_mecunittest MecTestPanic8
END_TESTCASE            MEC_UNIT_TEST_108


START_TESTCASE          MEC_UNIT_TEST_109
//! @SYMTestCaseID      MEC_UNIT_TEST_109
//! @SYMTestCaseDesc 	Test Panic mecpanic:2 (EInvalidSelfReference) for RMetaExtensionContainer::Open(RMetaExtensionContainerC& aMec)
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Create container against container
//! @SYMTestExpectedResults  Panic mecpanic:2
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	2 mecpanic  60 te_mecunittest MecTestPanic9
END_TESTCASE            MEC_UNIT_TEST_109


START_TESTCASE          MEC_UNIT_TEST_110
//! @SYMTestCaseID      MEC_UNIT_TEST_110
//! @SYMTestCaseDesc 	Test Panic mecpanic:1 (ENoImplementation) for RMetaExtensionContainer::FindExtension()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) FindExtension T1 in container
//! @SYMTestExpectedResults  Panic mecpanic:1
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	1 mecpanic  60 te_mecunittest MecTestPanic10
END_TESTCASE            MEC_UNIT_TEST_110


START_TESTCASE          MEC_UNIT_TEST_111
//! @SYMTestCaseID      MEC_UNIT_TEST_111
//! @SYMTestCaseDesc 	Test Panic mecpanic:1 (ENoImplementation) for RMetaExtensionContainer::FindExtensionL()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) FindExtensionL T1 in container
//! @SYMTestExpectedResults  Panic mecpanic:1
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	1 mecpanic  60 te_mecunittest MecTestPanic11
END_TESTCASE            MEC_UNIT_TEST_111


START_TESTCASE          MEC_UNIT_TEST_112
//! @SYMTestCaseID      MEC_UNIT_TEST_112
//! @SYMTestCaseDesc 	Test Panic mecpanic:1 (ENoImplementation) for RMetaExtensionContainer::AppendExtension()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) AppendExtension T1 to container
//! @SYMTestExpectedResults  Panic mecpanic:1
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	1 mecpanic  60 te_mecunittest MecTestPanic12
END_TESTCASE            MEC_UNIT_TEST_112


START_TESTCASE          MEC_UNIT_TEST_113
//! @SYMTestCaseID      MEC_UNIT_TEST_113
//! @SYMTestCaseDesc 	Test Panic mecpanic:1 (ENoImplementation) for RMetaExtensionContainer::AppendExtensionL()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) AppendExtensionL T1 to container
//! @SYMTestExpectedResults  Panic mecpanic:1
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	1 mecpanic  60 te_mecunittest MecTestPanic13
END_TESTCASE            MEC_UNIT_TEST_113


START_TESTCASE          MEC_UNIT_TEST_114
//! @SYMTestCaseID      MEC_UNIT_TEST_114
//! @SYMTestCaseDesc 	Test Panic mecpanic:1 (ENoImplementation) for RMetaExtensionContainer::AppendContainerL()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Create container cont1
//						2) AppendExtension T1 to cont1
//						3) AppendContainerL cont1 to unopened cont2
//! @SYMTestExpectedResults  Panic mecpanic:1
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	1 mecpanic  60 te_mecunittest MecTestPanic14
END_TESTCASE            MEC_UNIT_TEST_114


START_TESTCASE          MEC_UNIT_TEST_115
//! @SYMTestCaseID      MEC_UNIT_TEST_115
//! @SYMTestCaseDesc 	Test Panic mecpanic:1 (ENoImplementation) for RMetaExtensionContainer::AppendContainerL()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Create container cont1
//						2) AppendExtension T1 to cont1
//						3) AppendContainerL unopened cont2 to cont1
//! @SYMTestExpectedResults  Panic mecpanic:1
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	1 mecpanic  60 te_mecunittest MecTestPanic15
END_TESTCASE            MEC_UNIT_TEST_115


START_TESTCASE          MEC_UNIT_TEST_116
//! @SYMTestCaseID      MEC_UNIT_TEST_116
//! @SYMTestCaseDesc 	Test Panic mecpanic:2 (EInvalidSelfReference) for RMetaExtensionContainer::AppendContainerL()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Create container cont1
//						2) AppendExtension T1
//						3) AppendContainer cont1 to cont1
//! @SYMTestExpectedResults  Panic mecpanic:2
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	2 mecpanic  60 te_mecunittest MecTestPanic16
END_TESTCASE            MEC_UNIT_TEST_116


START_TESTCASE          MEC_UNIT_TEST_117
//! @SYMTestCaseID      MEC_UNIT_TEST_117
//! @SYMTestCaseDesc 	Test Panic mecpanic:2 (EInvalidSelfReference) for RMetaExtensionContainer::AppendContainerL()
//! @SYMFssID 			COMMS-INFRAS/Esock/MetaExtensionContainer/UnitTest
//! @SYMTestActions 	1) Create container cont1
//						2) AppendExtension T1
//						3) Open constMec against cont1
//						3) AppendContainer constMec to cont1
//! @SYMTestExpectedResults  Panic mecpanic:2
//! @SYMTestPriority 	Critical
//! @SYMTestStatus 		Implemented
RUN_PANIC_STEP_RESULT 	2 mecpanic  60 te_mecunittest MecTestPanic17
END_TESTCASE            MEC_UNIT_TEST_117
