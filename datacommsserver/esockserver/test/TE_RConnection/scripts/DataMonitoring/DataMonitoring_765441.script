//
// Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @file
//! @SYMTestSuiteName NET-DATAMON
//! @SYMScriptTestEnvironment Standard Symbian HRP or emulator environment


// Load the test suite and esock
LOAD_SUITE te_esockteststepsSuite -SharedData

RUN_SCRIPT Z:\TestData\scripts\te_esock_test_unloadesockForced.script
ced -i  z:\testdata\configs\DataMonitoring\DataMonitoring.ced.cfg c:\DataMonitoring.ced.cfg
RUN_SCRIPT z:\TestData\scripts\te_esock_test_loadesock.script


START_TESTCASE			COMINF-ESOCK-RConnection-DataMonitoring-2701
//! @SYMTestCaseID		COMINF-ESOCK-RConnection-DataMonitoring-2701
//!@SYMTestCaseDesc           	Confirm valid data transferred stats for secondary subconnection with primary present
//!@SYMPREQ                   	PREQ399
//!@SYMAPI
//RCommsDataMonitoringApiExt::Open()
//RCommsDataMonitoringApiExt::RequestDataTransferred()
//RCommsDataMonitoringApiExt::Close()
//!@SYMTestPriority           	Critical
//!@SYMTestActions
//Create, open and start a connection explicitly.
//Create, open and connect a TCP socket on the connection.
//Create and open a secondary subconnection (SubConn1) on the connection.
//Set Qos Parameters on the secondary context SubConn1 and add the socket to it.
//Create and open a second subconnection (SubConn2) and attach it to the primary context (EAttachToDefault).
//Create and open data monitors on the two subconnections. DataMonitor1 (SubConn1) and DataMonitor2 (SubConn2) respecitively.
//Send and receive data on the socket.
//Request the amount of data transferred with ::RequestDataTransferred() on each of the 2 data monitors. Confirm that data has been sent on both as expected. At least some data on DataMonitor1 during original connect of socket.
//In several separate iterations send and receive data on the socket and confirm with calls to ::RequestDataTransferred() on each of the 2 data monitors that data is accumulated only on the secondary (SubConn1) and not on primary (SubConn2).
//!@SYMTestType               	CIT
//!@SYMTestExpectedResults    	Expect at least the number of bytes sent to be returned by the calls to ::RequestDataTransferred().

// Create and connect the socket server required
RUN_TEST_STEP 100 te_esockteststepsSuite creatersocketservStep z:\testdata\configs\DataMonitoring\765441.ini CreateSockSvr1
RUN_TEST_STEP 100 te_esockteststepsSuite connectrsocketservStep z:\testdata\configs\DataMonitoring\765441.ini ConnectSockSvr1

// Establish connection and start it explicitly with IAP ID
RUN_TEST_STEP 100 te_esockteststepsSuite createrconnectionStep z:\testdata\configs\DataMonitoring\765441.ini CreateConn1
RUN_TEST_STEP 100 te_esockteststepsSuite openRConnectionStep z:\testdata\configs\DataMonitoring\765441.ini OpenConn1
RUN_TEST_STEP 100 te_esockteststepsSuite StartRConnectionStep z:\testdata\configs\DataMonitoring\765441.ini StartConn1

// Open a UDP socket on our newly formed connection
RUN_TEST_STEP 100 te_esockteststepsSuite creatersocketStep z:\testdata\configs\DataMonitoring\765441.ini CreateSocket1
RUN_TEST_STEP 100 te_esockteststepsSuite openrsocketStep z:\testdata\configs\DataMonitoring\765441.ini OpenSocket1
RUN_TEST_STEP 100 te_esockteststepsSuite connectrsocketStep z:\testdata\configs\DataMonitoring\765441.ini ConnectSocket1

// Create and open a secondary RSubConnection for our RConnection
RUN_TEST_STEP 100 te_esockteststepsSuite creatersubconnectionStep z:\testdata\configs\DataMonitoring\765441.ini CreateSubConn1
RUN_TEST_STEP 100 te_esockteststepsSuite openrsubconnectionStep z:\testdata\configs\DataMonitoring\765441.ini OpenSubConn1
RUN_TEST_STEP 100 te_esockteststepsSuite creatersubconparameterbundleStep z:\testdata\configs\DataMonitoring\765441.ini CreateParamsForSubConn1

// Set QoS parameters on our secondary RSubConnection and add the RSocket to it
RUN_TEST_STEP 100 te_esockteststepsSuite initialisersubconparameterfamilyStep z:\testdata\configs\DataMonitoring\765441.ini InitParamFamilyForSubConn1
RUN_TEST_STEP 100 te_esockteststepsSuite setrsubconparametersStep z:\testdata\configs\DataMonitoring\765441.ini SetParamsOnSubConn1
RUN_TEST_STEP 100 te_esockteststepsSuite addrsockettorsubconnectionStep z:\testdata\configs\DataMonitoring\765441.ini AddSocket1ToSubConn1

// Create and open a sub connection that represents the primary sub connection on our connection (EAttachToDefault)
RUN_TEST_STEP 100 te_esockteststepsSuite creatersubconnectionStep z:\testdata\configs\DataMonitoring\765441.ini CreateSubConn2
RUN_TEST_STEP 100 te_esockteststepsSuite openrsubconnectionStep z:\testdata\configs\DataMonitoring\765441.ini OpenSubConn2

// Create DataMonitoring extension API for each subconnection (primary and secondary)
RUN_TEST_STEP 100 te_esockteststepsSuite OpenRCommsDataMonitoringApiExtStep z:\testdata\configs\DataMonitoring\765441.ini OpenDataMonitor1
RUN_TEST_STEP 100 te_esockteststepsSuite OpenRCommsDataMonitoringApiExtStep z:\testdata\configs\DataMonitoring\765441.ini OpenDataMonitor2

// Send and receive some data on the socket
RUN_TEST_STEP 100 te_esockteststepsSuite sendreceiversocketStep z:\testdata\configs\DataMonitoring\765441.ini SendReceiveOnSocket1_1

// Fetch the amount of data transferred so far on each sub connection to compare with that following
RUN_TEST_STEP 100 te_esockteststepsSuite RequestDataTransferredStep z:\testdata\configs\DataMonitoring\765441.ini ReqDataTransferredMonitor1_1
RUN_TEST_STEP 100 te_esockteststepsSuite RequestDataTransferredStep z:\testdata\configs\DataMonitoring\765441.ini ReqDataTransferredMonitor2_1

// Repeatedly send and receive data on the socket
// Confirming with each iteration that at the data sent and received was accumulated on the secondary
// and that none was recorded on the primary
RUN_TEST_STEP 100 te_esockteststepsSuite sendreceiversocketStep z:\testdata\configs\DataMonitoring\765441.ini SendReceiveOnSocket1_2
RUN_TEST_STEP 100 te_esockteststepsSuite RequestDataTransferredStep z:\testdata\configs\DataMonitoring\765441.ini ReqDataTransferredMonitor1_2
RUN_TEST_STEP 100 te_esockteststepsSuite RequestDataTransferredStep z:\testdata\configs\DataMonitoring\765441.ini ReqDataTransferredMonitor2_2
RUN_TEST_STEP 100 te_esockteststepsSuite sendreceiversocketStep z:\testdata\configs\DataMonitoring\765441.ini SendReceiveOnSocket1_3
RUN_TEST_STEP 100 te_esockteststepsSuite RequestDataTransferredStep z:\testdata\configs\DataMonitoring\765441.ini ReqDataTransferredMonitor1_3
RUN_TEST_STEP 100 te_esockteststepsSuite RequestDataTransferredStep z:\testdata\configs\DataMonitoring\765441.ini ReqDataTransferredMonitor2_3
RUN_TEST_STEP 100 te_esockteststepsSuite sendreceiversocketStep z:\testdata\configs\DataMonitoring\765441.ini SendReceiveOnSocket1_4
RUN_TEST_STEP 100 te_esockteststepsSuite RequestDataTransferredStep z:\testdata\configs\DataMonitoring\765441.ini ReqDataTransferredMonitor1_4
RUN_TEST_STEP 100 te_esockteststepsSuite RequestDataTransferredStep z:\testdata\configs\DataMonitoring\765441.ini ReqDataTransferredMonitor2_4


// Close the networking entities we used
RUN_TEST_STEP 100 te_esockteststepsSuite CloseRCommsDataMonitoringApiExtStep z:\testdata\configs\DataMonitoring\765441.ini CloseDataMonitor1
RUN_TEST_STEP 100 te_esockteststepsSuite CloseRCommsDataMonitoringApiExtStep z:\testdata\configs\DataMonitoring\765441.ini CloseDataMonitor2
RUN_TEST_STEP 100 te_esockteststepsSuite closersubconnectionStep z:\testdata\configs\DataMonitoring\765441.ini CloseSubConn1
RUN_TEST_STEP 100 te_esockteststepsSuite closersubconnectionStep z:\testdata\configs\DataMonitoring\765441.ini CloseSubConn2
RUN_TEST_STEP 100 te_esockteststepsSuite closersocketStep z:\testdata\configs\DataMonitoring\765441.ini CloseSocket1
RUN_TEST_STEP 100 te_esockteststepsSuite closerconnectionStep z:\testdata\configs\DataMonitoring\765441.ini CloseConn1
RUN_TEST_STEP 100 te_esockteststepsSuite closersocketservStep z:\testdata\configs\DataMonitoring\765441.ini CloseSockSvr1
RUN_TEST_STEP 100 te_esockteststepsSuite cleanallStep
END_TESTCASE			COMINF-ESOCK-RConnection-DataMonitoring-2701


// Clean up
RUN_SCRIPT Z:\TestData\Scripts\te_esock_test_stopallinterfaces.script
RUN_SCRIPT Z:\TestData\scripts\te_esock_test_unloadesockForced.script


PRINT Completed NET-DATAMON-0441



