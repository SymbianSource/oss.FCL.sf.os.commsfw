***************
*** 9,21 ****
  // Nokia Corporation - initial contribution.
  //
  // Contributors:
  //
  // Description:
  // Mobility Meta Connection Provider Activities
- //
  //
  
  /**
   @file
   @internalComponent
  */
--- 9,21 ----
  // Nokia Corporation - initial contribution.
  //
  // Contributors:
  //
  // Description:
  // Mobility Meta Connection Provider Activities
+ // 
  //
  
  /**
   @file
   @internalComponent
  */
***************
*** 46,92 ****
      static MeshMachine::CNodeActivityBase* NewL(const MeshMachine::TNodeActivity& aActivitySig, MeshMachine::AMMNodeBase& aNode);
  
  protected:
  	CMobilityActivity(const MeshMachine::TNodeActivity& aActivitySig, MeshMachine::AMMNodeBase& aNode);
  	virtual ~CMobilityActivity();
  	typedef MeshMachine::TNodeContext<CMobilityMetaConnectionProvider, MCprStates::TContext> TContext;
- 
  private:
  	TBool EvaluatePreference(TContext& aContext);
      void SetHandshakingFlag();
      void ClearHandshakingFlag();
  
  private:
  	ESock::RMetaServiceProviderInterface* iCurrent;
- 	ESock::RMetaServiceProviderInterface* iAvailable;
- 	ESock::RMetaServiceProviderInterface* iCandidate;
  	const TUint iAvailabilityScoreTreshold;
  
  
  public:
- 
  	DECLARE_SMELEMENT_HEADER(TAwaitingCurrentCarrierRejectedOrAvailabilityChange, MeshMachine::TState<TContext>, NetStateMachine::MState, TContext)
  		virtual TBool Accept();
  	DECLARE_SMELEMENT_FOOTER(TAwaitingCurrentCarrierRejectedOrAvailabilityChange)
- 
  	DECLARE_SMELEMENT_HEADER(TNoTagOrAwaitMobility, MeshMachine::TStateFork<TContext>, NetStateMachine::MStateFork, CMobilityActivity::TContext)
  		virtual TInt TransitionTag();
- 	DECLARE_SMELEMENT_FOOTER(TNoTagOrAwaitMobility)
  
- 	DECLARE_SMELEMENT_HEADER(TNoTagOrReConnectOrStartMobilityHandshakeBackwards, MeshMachine::TStateFork<TContext>, NetStateMachine::MStateFork, CMobilityActivity::TContext)
- 		virtual TInt TransitionTag();
- 	DECLARE_SMELEMENT_FOOTER(TNoTagOrReConnectOrStartMobilityHandshakeBackwards)
- 
  	DECLARE_SMELEMENT_HEADER(TNoTagOrStartMobilityHandshakeBackwards, MeshMachine::TStateFork<TContext>, NetStateMachine::MStateFork, CMobilityActivity::TContext)
  		virtual TInt TransitionTag();
  	DECLARE_SMELEMENT_FOOTER(TNoTagOrStartMobilityHandshakeBackwards)
- 
  	DECLARE_SMELEMENT_HEADER(TNoTagOrAwaitMobilityBackwardsOnMobilityTrigger, MeshMachine::TStateFork<TContext>, NetStateMachine::MStateFork, CMobilityActivity::TContext)
  		virtual TInt TransitionTag();
  	DECLARE_SMELEMENT_FOOTER(TNoTagOrAwaitMobilityBackwardsOnMobilityTrigger)
- 
  	DECLARE_SMELEMENT_HEADER(TClearHandshakingFlag, MeshMachine::TStateTransition<TContext>, NetStateMachine::MStateTransition, CMobilityActivity::TContext)
  		virtual void DoL();
  	DECLARE_SMELEMENT_FOOTER(TClearHandshakingFlag)
  
  	DECLARE_SMELEMENT_HEADER(TSendAvailabilityRequest, MeshMachine::TStateTransition<TContext>, NetStateMachine::MStateTransition, CMobilityActivity::TContext)
  		virtual void DoL();
--- 46,87 ----
      static MeshMachine::CNodeActivityBase* NewL(const MeshMachine::TNodeActivity& aActivitySig, MeshMachine::AMMNodeBase& aNode);
  
  protected:
  	CMobilityActivity(const MeshMachine::TNodeActivity& aActivitySig, MeshMachine::AMMNodeBase& aNode);
  	virtual ~CMobilityActivity();
  	typedef MeshMachine::TNodeContext<CMobilityMetaConnectionProvider, MCprStates::TContext> TContext;
+ 	
  private:
  	TBool EvaluatePreference(TContext& aContext);
      void SetHandshakingFlag();
      void ClearHandshakingFlag();
  
  private:
  	ESock::RMetaServiceProviderInterface* iCurrent;
+ 	ESock::RMetaServiceProviderInterface* iPreferred;
  	const TUint iAvailabilityScoreTreshold;
  
  
  public:
+ 		
  	DECLARE_SMELEMENT_HEADER(TAwaitingCurrentCarrierRejectedOrAvailabilityChange, MeshMachine::TState<TContext>, NetStateMachine::MState, TContext)
  		virtual TBool Accept();
  	DECLARE_SMELEMENT_FOOTER(TAwaitingCurrentCarrierRejectedOrAvailabilityChange)
+ 	
  	DECLARE_SMELEMENT_HEADER(TNoTagOrAwaitMobility, MeshMachine::TStateFork<TContext>, NetStateMachine::MStateFork, CMobilityActivity::TContext)
  		virtual TInt TransitionTag();
+ 	DECLARE_SMELEMENT_FOOTER(TNoTagOrAwaitMobility)	
  
  	DECLARE_SMELEMENT_HEADER(TNoTagOrStartMobilityHandshakeBackwards, MeshMachine::TStateFork<TContext>, NetStateMachine::MStateFork, CMobilityActivity::TContext)
  		virtual TInt TransitionTag();
  	DECLARE_SMELEMENT_FOOTER(TNoTagOrStartMobilityHandshakeBackwards)
+ 	
  	DECLARE_SMELEMENT_HEADER(TNoTagOrAwaitMobilityBackwardsOnMobilityTrigger, MeshMachine::TStateFork<TContext>, NetStateMachine::MStateFork, CMobilityActivity::TContext)
  		virtual TInt TransitionTag();
  	DECLARE_SMELEMENT_FOOTER(TNoTagOrAwaitMobilityBackwardsOnMobilityTrigger)
+ 	
  	DECLARE_SMELEMENT_HEADER(TClearHandshakingFlag, MeshMachine::TStateTransition<TContext>, NetStateMachine::MStateTransition, CMobilityActivity::TContext)
  		virtual void DoL();
  	DECLARE_SMELEMENT_FOOTER(TClearHandshakingFlag)
  
  	DECLARE_SMELEMENT_HEADER(TSendAvailabilityRequest, MeshMachine::TStateTransition<TContext>, NetStateMachine::MStateTransition, CMobilityActivity::TContext)
  		virtual void DoL();
***************
*** 102,127 ****
  		virtual void DoL();
  	DECLARE_SMELEMENT_FOOTER(TRequestReConnect)
  
  	DECLARE_SMELEMENT_HEADER(TInformMigrationCompleted, MeshMachine::TStateTransition<TContext>, NetStateMachine::MStateTransition, CMobilityActivity::TContext)
  		virtual void DoL();
  	DECLARE_SMELEMENT_FOOTER(TInformMigrationCompleted)
- 
- 	typedef MeshMachine::TActivitiesIdMutex<ESock::ECFActivityConnectionStartRecovery,
  											ESock::ECFActivityConnectionGoneDownRecovery> TActivityErrorRecoveryMutex;
  	DECLARE_SERIALIZABLE_STATE(
  	    TNoTagOrAwaitMobilityBackwardsOnMobilityTriggerBlockedByErrorRecovery,
  		TActivityErrorRecoveryMutex,
  		TNoTagOrAwaitMobilityBackwardsOnMobilityTrigger
- 		)
- 
  	DECLARE_SERIALIZABLE_STATE(
  		TNoTagOrAwaitMobilityBlockedByErrorRecovery,
  		TActivityErrorRecoveryMutex,
  		TNoTagOrAwaitMobility
- 		)
  	};
  
  ///////////////////////////////////////////////////////////////////////////////
  //CConnectionRecoveryActivity
  class CConnectionRecoveryActivity : public MeshMachine::CNodeRetryActivity
  	{
--- 97,122 ----
  		virtual void DoL();
  	DECLARE_SMELEMENT_FOOTER(TRequestReConnect)
  
  	DECLARE_SMELEMENT_HEADER(TInformMigrationCompleted, MeshMachine::TStateTransition<TContext>, NetStateMachine::MStateTransition, CMobilityActivity::TContext)
  		virtual void DoL();
  	DECLARE_SMELEMENT_FOOTER(TInformMigrationCompleted)
+ 	
+ 	typedef MeshMachine::TActivitiesIdMutex<ESock::ECFActivityConnectionStartRecovery, 
  											ESock::ECFActivityConnectionGoneDownRecovery> TActivityErrorRecoveryMutex;
  	DECLARE_SERIALIZABLE_STATE(
  	    TNoTagOrAwaitMobilityBackwardsOnMobilityTriggerBlockedByErrorRecovery,
  		TActivityErrorRecoveryMutex,
  		TNoTagOrAwaitMobilityBackwardsOnMobilityTrigger
+ 		)	
+ 	
  	DECLARE_SERIALIZABLE_STATE(
  		TNoTagOrAwaitMobilityBlockedByErrorRecovery,
  		TActivityErrorRecoveryMutex,
  		TNoTagOrAwaitMobility
+ 		)		
  	};
  
  ///////////////////////////////////////////////////////////////////////////////
  //CConnectionRecoveryActivity
  class CConnectionRecoveryActivity : public MeshMachine::CNodeRetryActivity
  	{
