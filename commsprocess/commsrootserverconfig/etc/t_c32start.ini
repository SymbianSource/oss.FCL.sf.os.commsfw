[Global]
# mbuf manager memory constraints - no bearing on the pools; the key name has been kept for backward compatibility
# - minSize has no meaning when using mbuf manager's RHeap/user-chunk model, for the DChunk model it is completely ignored
# - format = min/init total memory size (in bytes)
MBufPoolSize=524288,524288
 
# mbuf size allocation information
# - mbuf size guidelines;
#   a. 128 byte is mandatory for some (poorly writen) legacy code that assumes the existance of mbufs of this size
#   b. < 128 byte is acceptable, but could break some (poorly written) legacy code that assumes that minimum mbuf size is 128
# - format = mbuf size(in bytes), initial allocation (in mbufs), minimum growth (in mbufs), automatic growth threshold (in mbufs)
MBufSizeAllocInfo1 = 128,  4, 6, 3	# deliberately awkard values to verify allocation & chaining behaviour
MBufSizeAllocInfo2 = 1200, 3, 4, 5	# deliberately awkard values to verify allocation & chaining behaviour
MBufSizeAllocInfo3 = 400,  3, 2, 1	# deliberately awkard values to verify allocation & chaining behaviour
MBufSizeAllocInfo4 = 1536, 4, 4, 4	# deliberately awkard values to verify allocation & chaining behaviour
MBufSizeAllocInfo5 = 2000, 4, 6, 3	# deliberately awkard values to verify allocation & chaining behaviour

#MBufSizeAllocInfo6 = 1201, 3, 4,20	# deliberately awkard values to verify allocation & chaining behaviour
#MBufSizeAllocInfo7 = 0,    1, 2, 3	# deliberately awkard values to verify allocation & chaining behaviour
#MBufSizeAllocInfo8 = 200,  0, 6, 3	# deliberately awkard values to verify allocation & chaining behaviour
#MBufSizeAllocInfo9 = 204,  2, 0, 3	# deliberately awkard values to verify allocation & chaining behaviour
#MBufSizeAllocInfo10= 207,  2, 3, 0	# deliberately awkard values to verify allocation & chaining behaviour

TestMode=1
